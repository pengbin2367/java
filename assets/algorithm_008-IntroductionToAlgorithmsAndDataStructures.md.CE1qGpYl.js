import{_ as t,c as o,o as a,a5 as r}from"./chunks/framework.BAO6c_AF.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"algorithm/008-IntroductionToAlgorithmsAndDataStructures.md","filePath":"algorithm/008-IntroductionToAlgorithmsAndDataStructures.md","lastUpdated":1729870203000}'),e={name:"algorithm/008-IntroductionToAlgorithmsAndDataStructures.md"},p=r("<p>说一个我觉得比较有趣、有用的算法分类：硬计算类算法、软计算类算法。注意：这两个名词都不是计算机科学或算法中的标准术语</p><p>那为啥要提这个呢？因为很有现实意义</p><ul><li><p>硬计算类算法：精确求解。但是某些问题使用硬计算类的算法，可能会让计算的复杂度较高 大厂算法和数据结构笔试、面试题、acm比赛或者和acm形式类似的比赛，考察的都是硬计算类算法。</p></li><li><p>软计算类算法：更注重逼近解决问题，而不是精确求解。计算时间可控 比如：模糊逻辑、神经网络、进化计算、概率理论、混沌理论、支持向量机、群体智能</p></li></ul><p>硬计算类算法是所有程序员岗位都会考、任何写代码的工作都会用到的。前端、后端、架构、算法所有岗位都要用到。但是算法工程师除了掌握硬计算类的算法之外，还需要掌握软计算类的算法。</p><p>说一个我觉得比较宏观的数据结构分类</p><ul><li><p>连续结构</p></li><li><p>跳转结构</p></li></ul><p>任何数据结构都一定是这两个结构拼出来的！没有例外！</p><p>数据结构太多了，从链表、队列、栈，到可持久化线段树、树链剖分、后缀数组等等结构</p><p>后面的课都会讲到！</p>",9),i=[p];function n(s,c,l,_,d,u){return a(),o("div",null,i)}const A=t(e,[["render",n]]);export{h as __pageData,A as default};
