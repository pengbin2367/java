import{_ as a,c as l,o as e,a5 as i}from"./chunks/framework.BAO6c_AF.js";const t="/java/assets/image-20240801172841041.3xBjl_Ol.png",f=JSON.parse('{"title":"字节码篇","description":"","frontmatter":{},"headers":[],"relativePath":"jvm/01-ByteCode.md","filePath":"jvm/01-ByteCode.md","lastUpdated":1729870203000}'),s={name:"jvm/01-ByteCode.md"},o=i('<h1 id="字节码篇" tabindex="-1">字节码篇 <a class="header-anchor" href="#字节码篇" aria-label="Permalink to &quot;字节码篇&quot;">​</a></h1><p><img src="'+t+'" alt="image-20240801172841041"></p><p>Java虚拟机的指令由一个字节长度的操作码 + 操作数构成（许多只包含操作码）</p><h2 id="字节码相关面试题" tabindex="-1">字节码相关面试题 <a class="header-anchor" href="#字节码相关面试题" aria-label="Permalink to &quot;字节码相关面试题&quot;">​</a></h2><p>Java虚拟机中，数据类型可以分为哪几类</p><p>为什么不把基本类型放在堆中</p><h2 id="class文件结构" tabindex="-1">Class文件结构 <a class="header-anchor" href="#class文件结构" aria-label="Permalink to &quot;Class文件结构&quot;">​</a></h2><p>Class文件的结构并不是一成不变的，也会随着Java虚拟机的发展，做出一些调整，但整体的结构和框架还是非常稳定的。Class文件总体结构如下：</p><ul><li>魔数</li><li>Class文件版本</li><li>常量池</li><li>访问标识</li><li>类索引、父类索引、接口索引集合</li><li>字段表集合</li><li>方法表集合</li><li>属性表集合</li></ul><h2 id="字节码指令" tabindex="-1">字节码指令 <a class="header-anchor" href="#字节码指令" aria-label="Permalink to &quot;字节码指令&quot;">​</a></h2><p>按用途大致分为9类：</p><ol><li>算术指令</li><li>加载与存储指令</li><li>类型转换指令</li><li>对象创建与访问指令</li><li>方法调用与返回指令</li><li>操作数栈管理指令</li><li>控制转移指令</li><li>异常处理指令</li><li>同步控制指令</li></ol>',12),r=[o];function n(c,d,_,h,p,m){return e(),l("div",null,r)}const C=a(s,[["render",n]]);export{f as __pageData,C as default};
