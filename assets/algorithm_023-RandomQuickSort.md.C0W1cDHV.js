import{_ as t,c as a,o,a5 as e}from"./chunks/framework.BAO6c_AF.js";const x=JSON.parse('{"title":"随机快排","description":"","frontmatter":{},"headers":[],"relativePath":"algorithm/023-RandomQuickSort.md","filePath":"algorithm/023-RandomQuickSort.md","lastUpdated":1729870203000}'),p={name:"algorithm/023-RandomQuickSort.md"},r=e('<h1 id="随机快排" tabindex="-1">随机快排 <a class="header-anchor" href="#随机快排" aria-label="Permalink to &quot;随机快排&quot;">​</a></h1><p>荷兰国旗问题优化后的过程： 在当前范围上选择一个数字x，利用荷兰国旗问题进行数组的划分，&lt;x =x &gt;x 对&lt;x范围重复这个过程，对&gt;x范围重复这个过程</p><p>荷兰国旗问题的优化点：选出一个数字x，数组在划分时会搞定所有值是x的数字</p><p>快速排序的时间和空间复杂度分析</p><p>核心点：怎么选择数字？</p><p>选择的数字是当前范围上的固定位置，比如范围上的最右数字，那么就是普通快速排序</p><p>选择的数字是当前范围上的随机位置，那么就是随机快速排序</p><p>普通快速排序，时间复杂度O(n^2)，额外空间复杂度O(n)</p><p>随机快速排序，时间复杂度O(n * logn)，额外空间复杂度O(logn)</p><p>关于复杂度的分析，进行定性的说明，定量证明略，因为证明较为复杂</p><p>算法导论-7.4.2有详细证明</p>',11),n=[r];function _(c,i,s,d,l,m){return o(),a("div",null,n)}const u=t(p,[["render",_]]);export{x as __pageData,u as default};
