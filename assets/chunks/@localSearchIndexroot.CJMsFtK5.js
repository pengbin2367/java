const t='{"documentCount":78,"nextId":78,"documentIds":{"0":"/java/basic/collection/CollectionInterviewQuestions.html#集合面试题","1":"/java/basic/collection/CollectionInterviewQuestions.html#java-集合框架是什么-说出集合框架的一些优点","2":"/java/basic/collection/CollectionInterviewQuestions.html#集合接口的常见实现类","3":"/java/basic/collection/CollectionInterviewQuestions.html#list-接口的实现类","4":"/java/basic/collection/CollectionInterviewQuestions.html#set-接口的实现类","5":"/java/basic/collection/CollectionInterviewQuestions.html#map-接口的实现类","6":"/java/basic/collection/CollectionInterviewQuestions.html#list-和-map-区别","7":"/java/basic/collection/CollectionInterviewQuestions.html#list、map、set-三个接口-存取元素时-各有什么特点","8":"/java/basic/collection/CollectionInterviewQuestions.html#为什么-map-接口不继承-collection-接口","9":"/java/basic/collection/CollectionInterviewQuestions.html#iterator-和-listiterator-之间有什么区别","10":"/java/basic/collection/CollectionInterviewQuestions.html#集合框架中的泛型有什么优点","11":"/java/basic/collection/CollectionInterviewQuestions.html#map-接口提供了哪些不同的集合视图","12":"/java/basic/collection/CollectionInterviewQuestions.html#jdk7-hashmap","13":"/java/basic/collection/CollectionInterviewQuestions.html#jdk8-hashmap","14":"/java/basic/collection/CollectionInterviewQuestions.html#jdk8-中的-hashmap-为什么要使用红黑树","15":"/java/basic/collection/CollectionInterviewQuestions.html#jdk8-中的-hashmap-什么时候将链表转化为红黑树","16":"/java/basic/collection/CollectionInterviewQuestions.html#jdk7-与-jdk8-中的-hashmap-的不同点","17":"/java/basic/collection/CollectionInterviewQuestions.html#jdk7-concurrenthashmap","18":"/java/basic/collection/CollectionInterviewQuestions.html#put-流程","19":"/java/basic/collection/CollectionInterviewQuestions.html#jdk8-concurrenthashmap","20":"/java/basic/collection/CollectionInterviewQuestions.html#put-流程-1","21":"/java/basic/collection/CollectionInterviewQuestions.html#jdk7-concurrenthashmap-如何保证并发","22":"/java/basic/collection/CollectionInterviewQuestions.html#jdk8-concurrenthashmap-如何保证并发","23":"/java/basic/collection/CollectionIntro.html#java-集合框架","24":"/java/basic/collection/CollectionIntro.html#将集合的接口与实现分离","25":"/java/basic/collection/CollectionIntro.html#collection-接口","26":"/java/basic/collection/CollectionIntro.html#迭代器","27":"/java/basic/collection/CollectionIntro.html#泛型实用方法","28":"/java/basic/collection/CollectionIntro.html#集合框架中的接口","29":"/java/basic/collection/CollectionIntro.html#collections-工具类","30":"/java/basic/collection/CollectionOfHashMap.html#深入java集合系列之——hashmap","31":"/java/basic/collection/CollectionOfHashMap.html#传统-hashmap-的缺点","32":"/java/basic/collection/CollectionOfHashMap.html#jdk1-8-中-hashmap-的数据结构","33":"/java/basic/collection/CollectionOfHashMap.html#hashmap-是数组-链表-红黑树实现的","34":"/java/basic/collection/CollectionOfHashMap.html#hashmap-中关于红黑树的三个关键参数","35":"/java/basic/collection/CollectionOfHashMap.html#hashmap-在-jdk1-8-中新增的操作-桶的树形化-treeifybin","36":"/java/basic/collection/CollectionOfHashMap.html#hash-方法","37":"/java/basic/collection/CollectionOfHashMap.html#resize-方法-rehash","38":"/java/basic/collection/CollectionOfHashMap.html#分析-hashmap-的-put-方法","39":"/java/basic/collection/CollectionOfHashMap.html#hashmap-的-put-方法执行过程","40":"/java/basic/collection/CollectionOfHashMap.html#hashmap-在-jdk1-8-中新增的操作-红黑树中查找元素-getnode","41":"/java/basic/collection/CollectionOfHashMap.html#jdk1-8-vs-jdk1-7-扩容机制","42":"/java/basic/collection/CollectionOfHashMap.html#fail-fast-机制","43":"/java/basic/collection/CollectionOfHashMap.html#jdk1-7-vs-jdk1-8-的性能","44":"/java/basic/collection/CollectionOfHashMap.html#put-操作","45":"/java/basic/collection/CollectionOfHashMap.html#get-操作","46":"/java/projects/tingshu/01-GettingStart.html#gettingstart","47":"/java/projects/tingshu/01-GettingStart.html#本机环境","48":"/java/projects/tingshu/01-GettingStart.html#docker-容器","49":"/java/projects/tingshu/01-GettingStart.html#mysql","50":"/java/projects/tingshu/01-GettingStart.html#rabbitmq","51":"/java/projects/tingshu/01-GettingStart.html#redis","52":"/java/projects/tingshu/01-GettingStart.html#minio","53":"/java/projects/tingshu/01-GettingStart.html#mongodb","54":"/java/projects/tingshu/01-GettingStart.html#nacos","55":"/java/projects/tingshu/01-GettingStart.html#sentinel","56":"/java/projects/tingshu/01-GettingStart.html#kafka","57":"/java/projects/tingshu/01-GettingStart.html#elasticsearch","58":"/java/projects/tingshu/01-GettingStart.html#前端部署","59":"/java/projects/tingshu/01-GettingStart.html#项目背景","60":"/java/projects/tingshu/01-GettingStart.html#项目技术栈","61":"/java/projects/tingshu/01-GettingStart.html#项目架构图","62":"/java/projects/tingshu/02-AlbumManagement.html#专辑管理","63":"/java/projects/tingshu/02-AlbumManagement.html#准备工作","64":"/java/projects/tingshu/02-AlbumManagement.html#关于nacos中配置文件的说明","65":"/java/projects/tingshu/02-AlbumManagement.html#关于数据库表设计","66":"/java/projects/tingshu/02-AlbumManagement.html#分类业务","67":"/java/projects/tingshu/02-AlbumManagement.html#功能设计","68":"/java/projects/tingshu/02-AlbumManagement.html#表结构","69":"/java/projects/tingshu/02-AlbumManagement.html#文件上传","70":"/java/projects/tingshu/03-TrackManagement.html#声音管理","71":"/java/projects/tingshu/03-TrackManagement.html#声音上传","72":"/java/projects/tingshu/03-TrackManagement.html#声音保存","73":"/java/projects/tingshu/03-TrackManagement.html#声音查询-分页","74":"/java/projects/tingshu/03-TrackManagement.html#声音的修改","75":"/java/projects/tingshu/03-TrackManagement.html#声音的删除","76":"/java/projects/tingshu/03-TrackManagement.html#根据专辑查询声音","77":"/java/projects/tingshu/03-TrackManagement.html#显示声音购买集数"},"fieldIds":{"title":0,"titles":1,"text":2},"fieldLength":{"0":[1,1,1],"1":[3,1,28],"2":[1,1,1],"3":[2,2,22],"4":[2,2,17],"5":[2,2,21],"6":[4,1,17],"7":[6,1,76],"8":[5,1,19],"9":[4,1,19],"10":[1,1,21],"11":[2,1,52],"12":[2,1,6],"13":[2,1,6],"14":[4,1,7],"15":[4,1,16],"16":[6,1,68],"17":[2,1,10],"18":[2,3,42],"19":[2,1,1],"20":[2,3,38],"21":[3,1,48],"22":[3,1,22],"23":[2,1,33],"24":[1,2,112],"25":[2,2,24],"26":[1,2,111],"27":[1,2,51],"28":[1,2,1],"29":[2,2,60],"30":[2,1,1],"31":[3,2,37],"32":[5,2,1],"33":[5,6,48],"34":[2,6,105],"35":[8,6,99],"36":[2,2,205],"37":[4,2,172],"38":[5,2,1],"39":[4,6,197],"40":[8,6,85],"41":[5,6,115],"42":[3,2,82],"43":[5,2,1],"44":[2,7,39],"45":[2,7,35],"46":[1,1,27],"47":[1,1,11],"48":[2,1,1],"49":[1,3,7],"50":[1,3,47],"51":[1,3,26],"52":[1,3,11],"53":[1,3,4],"54":[1,3,4],"55":[1,3,4],"56":[1,3,4],"57":[1,3,2],"58":[1,1,32],"59":[1,1,54],"60":[1,1,96],"61":[1,1,1],"62":[1,1,1],"63":[1,1,4],"64":[1,2,20],"65":[1,2,56],"66":[1,1,1],"67":[1,2,6],"68":[1,2,172],"69":[1,1,118],"70":[1,1,1],"71":[1,1,1],"72":[1,1,1],"73":[3,1,1],"74":[1,1,1],"75":[1,1,1],"76":[1,1,1],"77":[1,1,1]},"averageFieldLength":[2.2435897435897436,2.076923076923077,37.05128205128206],"storedFields":{"0":{"title":"集合面试题","titles":[]},"1":{"title":"Java 集合框架是什么？说出集合框架的一些优点","titles":["集合面试题"]},"2":{"title":"集合接口的常见实现类","titles":["集合面试题"]},"3":{"title":"List 接口的实现类","titles":["集合面试题","集合接口的常见实现类"]},"4":{"title":"Set 接口的实现类","titles":["集合面试题","集合接口的常见实现类"]},"5":{"title":"Map 接口的实现类","titles":["集合面试题","集合接口的常见实现类"]},"6":{"title":"List 和 Map 区别","titles":["集合面试题"]},"7":{"title":"List、Map、Set 三个接口，存取元素时，各有什么特点","titles":["集合面试题"]},"8":{"title":"为什么 Map 接口不继承 Collection 接口","titles":["集合面试题"]},"9":{"title":"Iterator 和 ListIterator 之间有什么区别","titles":["集合面试题"]},"10":{"title":"集合框架中的泛型有什么优点","titles":["集合面试题"]},"11":{"title":"Map 接口提供了哪些不同的集合视图","titles":["集合面试题"]},"12":{"title":"JDK7 HashMap","titles":["集合面试题"]},"13":{"title":"JDK8 HashMap","titles":["集合面试题"]},"14":{"title":"JDK8 中的 HashMap 为什么要使用红黑树","titles":["集合面试题"]},"15":{"title":"JDK8 中的 HashMap 什么时候将链表转化为红黑树","titles":["集合面试题"]},"16":{"title":"JDK7 与 JDK8 中的 HashMap 的不同点","titles":["集合面试题"]},"17":{"title":"JDK7 ConcurrentHashMap","titles":["集合面试题"]},"18":{"title":"put 流程","titles":["集合面试题","JDK7 ConcurrentHashMap"]},"19":{"title":"JDK8 ConcurrentHashMap","titles":["集合面试题"]},"20":{"title":"put 流程","titles":["集合面试题","JDK8 ConcurrentHashMap"]},"21":{"title":"JDK7 ConcurrentHashMap 如何保证并发","titles":["集合面试题"]},"22":{"title":"JDK8 ConcurrentHashMap 如何保证并发","titles":["集合面试题"]},"23":{"title":"Java 集合框架","titles":[]},"24":{"title":"将集合的接口与实现分离","titles":["Java 集合框架"]},"25":{"title":"Collection 接口","titles":["Java 集合框架"]},"26":{"title":"迭代器","titles":["Java 集合框架"]},"27":{"title":"泛型实用方法","titles":["Java 集合框架"]},"28":{"title":"集合框架中的接口","titles":["Java 集合框架"]},"29":{"title":"Collections 工具类","titles":["Java 集合框架"]},"30":{"title":"深入Java集合系列之——HashMap","titles":[]},"31":{"title":"传统 HashMap 的缺点","titles":["深入Java集合系列之——HashMap"]},"32":{"title":"JDK1.8 中 HashMap 的数据结构","titles":["深入Java集合系列之——HashMap"]},"33":{"title":"HashMap 是数组 + 链表 + 红黑树实现的","titles":["深入Java集合系列之——HashMap","JDK1.8 中 HashMap 的数据结构"]},"34":{"title":"HashMap 中关于红黑树的三个关键参数","titles":["深入Java集合系列之——HashMap","JDK1.8 中 HashMap 的数据结构"]},"35":{"title":"HashMap 在 JDK1.8 中新增的操作：桶的树形化 treeifyBin()","titles":["深入Java集合系列之——HashMap","JDK1.8 中 HashMap 的数据结构"]},"36":{"title":"hash 方法","titles":["深入Java集合系列之——HashMap"]},"37":{"title":"resize 方法（rehash）","titles":["深入Java集合系列之——HashMap"]},"38":{"title":"分析 HashMap 的 put 方法","titles":["深入Java集合系列之——HashMap"]},"39":{"title":"HashMap 的 put 方法执行过程","titles":["深入Java集合系列之——HashMap","分析 HashMap 的 put 方法"]},"40":{"title":"HashMap 在 JDK1.8 中新增的操作：红黑树中查找元素 getNode()","titles":["深入Java集合系列之——HashMap","分析 HashMap 的 put 方法"]},"41":{"title":"JDK1.8 VS JDK1.7 扩容机制","titles":["深入Java集合系列之——HashMap","分析 HashMap 的 put 方法"]},"42":{"title":"Fail-Fast 机制","titles":["深入Java集合系列之——HashMap"]},"43":{"title":"JDK1.7 VS JDK1.8 的性能","titles":["深入Java集合系列之——HashMap"]},"44":{"title":"put 操作","titles":["深入Java集合系列之——HashMap","JDK1.7 VS JDK1.8 的性能"]},"45":{"title":"get 操作","titles":["深入Java集合系列之——HashMap","JDK1.7 VS JDK1.8 的性能"]},"46":{"title":"GettingStart","titles":[]},"47":{"title":"本机环境","titles":["GettingStart"]},"48":{"title":"Docker 容器","titles":["GettingStart"]},"49":{"title":"MySQL","titles":["GettingStart","Docker 容器"]},"50":{"title":"RabbitMQ","titles":["GettingStart","Docker 容器"]},"51":{"title":"Redis","titles":["GettingStart","Docker 容器"]},"52":{"title":"Minio","titles":["GettingStart","Docker 容器"]},"53":{"title":"MongoDB","titles":["GettingStart","Docker 容器"]},"54":{"title":"Nacos","titles":["GettingStart","Docker 容器"]},"55":{"title":"Sentinel","titles":["GettingStart","Docker 容器"]},"56":{"title":"Kafka","titles":["GettingStart","Docker 容器"]},"57":{"title":"ElasticSearch","titles":["GettingStart","Docker 容器"]},"58":{"title":"前端部署","titles":["GettingStart"]},"59":{"title":"项目背景","titles":["GettingStart"]},"60":{"title":"项目技术栈","titles":["GettingStart"]},"61":{"title":"项目架构图","titles":["GettingStart"]},"62":{"title":"专辑管理","titles":[]},"63":{"title":"准备工作","titles":["专辑管理"]},"64":{"title":"关于Nacos中配置文件的说明","titles":["专辑管理","准备工作"]},"65":{"title":"关于数据库表设计","titles":["专辑管理","准备工作"]},"66":{"title":"分类业务","titles":["专辑管理"]},"67":{"title":"功能设计","titles":["专辑管理","分类业务"]},"68":{"title":"表结构","titles":["专辑管理","分类业务"]},"69":{"title":"文件上传","titles":["专辑管理"]},"70":{"title":"声音管理","titles":[]},"71":{"title":"声音上传","titles":["声音管理"]},"72":{"title":"声音保存","titles":["声音管理"]},"73":{"title":"声音查询（分页）","titles":["声音管理"]},"74":{"title":"声音的修改","titles":["声音管理"]},"75":{"title":"声音的删除","titles":["声音管理"]},"76":{"title":"根据专辑查询声音","titles":["声音管理"]},"77":{"title":"显示声音购买集数","titles":["声音管理"]}},"dirtCount":0,"index":[["显示声音购买集数",{"0":{"77":1}}],["声音的删除",{"0":{"75":1}}],["声音的修改",{"0":{"74":1}}],["声音查询",{"0":{"73":1}}],["声音保存",{"0":{"72":1}}],["声音上传",{"0":{"71":1}}],["声音管理",{"0":{"70":1},"1":{"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1}}],["身份验证信息",{"2":{"69":1}}],["启用ntp同步",{"2":{"69":1}}],["启动服务",{"2":{"69":1}}],["开启开机启动服务",{"2":{"69":1}}],["开头的类",{"2":{"24":1}}],["第六步",{"2":{"69":1}}],["第五步",{"2":{"69":1}}],["第四步",{"2":{"69":1}}],["第三步",{"2":{"69":1}}],["第二步",{"2":{"69":1}}],["第一步",{"2":{"69":1}}],["安装ntp服务",{"2":{"69":1}}],["服务器的时间与windows",{"2":{"69":1}}],["服用型和可操作性",{"2":{"1":1}}],["综上所诉",{"2":{"68":1}}],["毫无疑问",{"2":{"68":1}}],["要获取到这个容器",{"2":{"69":1}}],["要上传图片到minio",{"2":{"69":1}}],["要实现的功能如图",{"2":{"69":1}}],["要返回上面的json格式的数据",{"2":{"68":1}}],["要么是在原位置再移动",{"2":{"41":1}}],["要么倍分配到",{"2":{"37":1}}],["连接查询等",{"2":{"68":1}}],["后端需要得到三张表的数据结果进行处理",{"2":{"68":1}}],["后续某个模块第一次启动",{"2":{"64":1}}],["放松音乐",{"2":{"68":1}}],["催眠音乐",{"2":{"68":1}}],["音乐音效",{"2":{"68":1}}],["音乐",{"2":{"68":1}}],["通常由我们自己编写sql执行",{"2":{"68":1}}],["通过minioconstantproperties来获取",{"2":{"69":1}}],["通过专业的朗读演员和音效制作",{"2":{"59":1}}],["通过分析源码我们可以看到",{"2":{"35":1}}],["通过反复调用",{"2":{"26":1}}],["通过",{"2":{"21":1}}],["通过使用泛型定义的变量的类型限制",{"2":{"10":1}}],["通过使用",{"2":{"1":1}}],["二级分类id",{"2":{"68":1}}],["二级分类和三级分类",{"2":{"68":1}}],["三级分类对应的一级",{"2":{"68":1}}],["三级分类表中有字段category1",{"2":{"68":1}}],["三张分类表没有什么特殊的地方",{"2":{"68":1}}],["三个接口",{"0":{"7":1}}],["专辑的分类是一个三级分类",{"2":{"68":1}}],["专辑管理的主要功能如下",{"2":{"65":1}}],["专辑管理对应的模块是service",{"2":{"64":1}}],["专辑管理",{"0":{"62":1},"1":{"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1}}],["展示某个一级分类下7个三级分类",{"2":{"67":1}}],["展示使用它们的方法",{"2":{"23":1}}],["页面中的各个分类数据的展示",{"2":{"67":1}}],["功能设计",{"0":{"67":1}}],["功能入口",{"2":{"65":1}}],["创作中心点击",{"2":{"65":1}}],["创建时间",{"2":{"65":1}}],["创建新的哈希表",{"2":{"37":1}}],["创建相同个数的树形节点",{"2":{"35":1}}],["我的",{"2":{"65":1}}],["我们都存放在nacos的配置文件中",{"2":{"69":1}}],["我们使用minio作为图片的存储服务",{"2":{"69":1}}],["我们使用的是",{"2":{"41":1}}],["我们只需要将三级分类的id作为视图表的主键id",{"2":{"68":1}}],["我们需要访问nacos",{"2":{"64":1}}],["我们知道",{"2":{"42":1}}],["我们在扩充",{"2":{"41":1}}],["我们可以得到如下的代码实现",{"2":{"68":1}}],["我们可以对其进行遍历",{"2":{"68":1}}],["我们可以假设这样一种场景",{"2":{"36":1}}],["我们可以使用",{"2":{"9":1}}],["我们一般静态创建一个接口",{"2":{"24":1}}],["运行app项目",{"2":{"65":1}}],["运行docker",{"2":{"53":1,"54":1,"55":1,"56":1}}],["保存专辑",{"2":{"65":1}}],["保证了",{"2":{"37":1}}],["你可以在这里一次性将所有配置文件都导入",{"2":{"64":1}}],["增加一个关于service",{"2":{"64":1}}],["准备工作",{"0":{"63":1},"1":{"64":1,"65":1}}],["全家桶",{"2":{"60":1}}],["全文检索服务器+可视化数据监控",{"2":{"60":1}}],["前端需要的分类数据格式如下",{"2":{"68":1}}],["前端技术栈",{"2":{"60":1}}],["前端部署",{"0":{"58":1}}],["阿里开源分布式事务解决方案",{"2":{"60":1}}],["阿里开源增量订阅组件",{"2":{"60":1}}],["合并和解决冲突",{"2":{"60":1}}],["推送",{"2":{"60":1}}],["代码实现",{"2":{"69":1}}],["代码管理工具",{"2":{"60":1}}],["代码质量会得到提高",{"2":{"1":1}}],["包",{"2":{"60":1}}],["包括自助出版的有声书和多样化的内容",{"2":{"59":1}}],["关于minio这里不过多赘述",{"2":{"69":1}}],["关于数据库表设计",{"0":{"65":1}}],["关于nacos中配置文件的说明",{"0":{"64":1}}],["关系型数据库",{"2":{"60":1}}],["关键字",{"2":{"3":1,"22":1}}],["微信支付",{"2":{"60":1}}],["支付平台",{"2":{"60":1}}],["支持作家和内容创作者",{"2":{"59":1}}],["支持",{"2":{"11":2}}],["支持的",{"2":{"11":1}}],["私有化对象存储集群",{"2":{"60":1}}],["线程池来实现异步操作",{"2":{"60":1}}],["驻内存数据网格框架",{"2":{"60":1}}],["内网穿透",{"2":{"60":1}}],["内存做缓存",{"2":{"60":1}}],["内容的修改都将增加这个值",{"2":{"42":1}}],["内容和当前链表节点",{"2":{"35":1}}],["依赖于",{"2":{"60":1}}],["持久层框架",{"2":{"60":1}}],["基于",{"2":{"60":2}}],["基础上传路径",{"2":{"58":1}}],["基础请求路径",{"2":{"58":1}}],["应用的初始搭建以及开发过程",{"2":{"60":1}}],["应该将它们提供给用户使用",{"2":{"27":1}}],["应该将迭代器认为是位于两个元素之间",{"2":{"26":1}}],["应该插入到哪个",{"2":{"18":1}}],["简化",{"2":{"60":1}}],["描述",{"2":{"60":1}}],["技术或工具",{"2":{"60":1}}],["项目架构图",{"0":{"61":1}}],["项目技术栈",{"0":{"60":1}}],["项目背景",{"0":{"59":1}}],["总的来说",{"2":{"59":1}}],["帮助用户在学习过程中更好地理解和吸收知识",{"2":{"59":1}}],["学习工具",{"2":{"59":1}}],["使得视力受损或其他障碍的用户也能轻松阅读",{"2":{"59":1}}],["使用自己的邮箱注册微信小程序",{"2":{"58":1}}],["使用图形界面工具",{"2":{"49":1}}],["使用",{"2":{"40":1,"60":1}}],["使用的技术包括",{"2":{"60":1}}],["使用的",{"2":{"37":1}}],["使用的尾插法",{"2":{"16":1}}],["使用新值替换",{"2":{"29":1}}],["使用具体的类才有意义",{"2":{"24":1}}],["使用经过严格测试的集合框架类",{"2":{"1":1}}],["使用核心集合类降低开发成本",{"2":{"1":1}}],["字幕显示等",{"2":{"59":1}}],["书签功能",{"2":{"59":1}}],["辅助功能",{"2":{"59":1}}],["尤其是那些不太喜欢阅读纸质书籍的人",{"2":{"59":1}}],["阅读体验",{"2":{"59":1}}],["教育内容等",{"2":{"59":1}}],["杂志",{"2":{"59":1}}],["小说",{"2":{"59":1}}],["涵盖了各种类型的图书",{"2":{"59":1}}],["多样化的阅读方式",{"2":{"59":1}}],["多样化内容",{"2":{"59":1}}],["多次时",{"2":{"7":1}}],["节省了携带实体书的麻烦",{"2":{"59":1}}],["节点",{"2":{"39":1}}],["任何地点收听有声书",{"2":{"59":1}}],["听书软件的开发推动了阅读体验的数字化和个性化",{"2":{"59":1}}],["听书软件也可以用作学习工具",{"2":{"59":1}}],["听书软件为作家和内容创作者提供了另一种传播作品的渠道",{"2":{"59":1}}],["听书软件通常还具备一些辅助功能",{"2":{"59":1}}],["听书软件可以提供更加生动",{"2":{"59":1}}],["听书软件提供了广泛的有声书选择",{"2":{"59":1}}],["听书软件使得阅读不再局限于纸质书籍",{"2":{"59":1}}],["听书软件应运而生",{"2":{"59":1}}],["便捷性",{"2":{"59":1}}],["便于向集合中插入和删除对象",{"2":{"3":1}}],["意义",{"2":{"59":1}}],["制作成录音带或",{"2":{"59":1}}],["跑步时",{"2":{"59":1}}],["人们开始寻求更便捷的方式来获取信息和娱乐",{"2":{"59":1}}],["参考官网安装即可",{"2":{"57":1}}],["参数来指定并发量",{"2":{"21":1}}],["y",{"2":{"69":1}}],["yum",{"2":{"69":1}}],["yapi",{"2":{"60":1}}],["yml即可",{"2":{"53":1,"54":1,"55":1,"56":1}}],["yes",{"2":{"51":1,"69":1}}],["无法访问的原因可能是",{"2":{"52":1}}],["无需遍历链表",{"2":{"16":1}}],["设计了三个表base",{"2":{"68":1}}],["设计人员感到是推出一组功能完善的数据结构的时机了",{"2":{"23":1}}],["设置密码",{"2":{"51":1}}],["修改为",{"2":{"51":2}}],["修改以下地方",{"2":{"51":1}}],["行解开注释",{"2":{"51":1}}],["行",{"2":{"51":3}}],["行数可能不一致",{"2":{"51":1}}],["官网",{"2":{"51":1}}],["目录",{"2":{"50":1}}],["目录下",{"2":{"50":2}}],["进入",{"2":{"50":1}}],["进行读写分离",{"2":{"60":1}}],["进行容器编排",{"2":{"46":1}}],["进行扩容",{"2":{"39":2}}],["进行树形化",{"2":{"35":1}}],["进行哈希",{"2":{"16":1}}],["进行",{"2":{"11":1}}],["命令重启",{"2":{"50":1}}],["命令退出",{"2":{"50":1}}],["命令启用插件",{"2":{"50":1}}],["命令查看插件是否",{"2":{"50":1}}],["命令进入到容器内部",{"2":{"50":1}}],["命令",{"2":{"50":1,"60":1}}],["切换到插件所在目录",{"2":{"50":1}}],["切分",{"2":{"34":1}}],["里面包含所有的建库建表语句",{"2":{"49":1}}],["执行",{"2":{"49":1,"50":4}}],["负责编码开发以及运行docker容器",{"2":{"47":1}}],["负载因子",{"2":{"44":1}}],["台式机跑微信小程序进行测试",{"2":{"47":1}}],["台式机",{"2":{"47":1}}],["笔记本是linux系统",{"2":{"47":1}}],["笔记本",{"2":{"47":1}}],["硬件环境",{"2":{"47":1}}],["本机环境",{"0":{"47":1}}],["本节将介绍",{"2":{"23":1}}],["部分镜像可能失效造成容器无法运行",{"2":{"46":1}}],["文件上传时",{"2":{"69":1}}],["文件上传",{"0":{"69":1},"2":{"65":1}}],["文件上传到",{"2":{"50":1}}],["文件中的镜像根据需求替换",{"2":{"46":1}}],["文件时",{"2":{"46":1}}],["文档时",{"2":{"24":1}}],["尚硅谷",{"2":{"46":1}}],["环境",{"2":{"46":1}}],["容器化技术",{"2":{"60":1}}],["容器内部",{"2":{"50":1}}],["容器",{"0":{"48":1},"1":{"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1},"2":{"46":1,"50":1}}],["等",{"2":{"60":1}}],["等等",{"2":{"46":1}}],["等集合的工具类",{"2":{"29":1}}],["94",{"2":{"45":1}}],["900",{"2":{"45":1}}],["912",{"2":{"44":1}}],["914",{"2":{"44":1}}],["次数",{"2":{"44":2,"45":2}}],["次幂的位置",{"2":{"41":1}}],["次幂的扩展",{"2":{"41":1}}],["比较均匀的时候",{"2":{"44":1,"45":1}}],["比如子查询",{"2":{"68":1}}],["比如",{"2":{"46":1,"51":1,"69":1}}],["比如向某个位置的链表进行插入节点",{"2":{"22":1}}],["比如添加一个元素",{"2":{"9":1}}],["正确的做法是",{"2":{"42":1}}],["正在进行扩容则会去帮组扩容",{"2":{"20":1}}],["编号",{"2":{"65":1}}],["编写依赖于此异常的程序的做法是错误的",{"2":{"42":1}}],["编译器简单地将",{"2":{"26":1}}],["编译器可以在非常高的层次上验证类型假设",{"2":{"10":1}}],["迭代的快速失败行为不能得到保证",{"2":{"42":1}}],["迭代器的快速失败行为应该仅用于检测程序错误",{"2":{"42":1}}],["迭代器的结果会变为未定义",{"2":{"11":1}}],["迭代器的结果会变为不确定",{"2":{"11":2}}],["迭代器很快就会完全失败",{"2":{"42":1}}],["迭代器将抛出",{"2":{"42":1}}],["迭代器就越过下一个元素",{"2":{"26":1}}],["迭代器",{"0":{"26":1}}],["面对并发的修改",{"2":{"42":1}}],["面对一大堆相互矛盾的设计策略",{"2":{"23":1}}],["由所有",{"2":{"42":1}}],["由于文件上传操作的通用性",{"2":{"69":1}}],["由于在视图表中",{"2":{"68":1}}],["由于",{"2":{"27":1,"36":1}}],["跟",{"2":{"42":1}}],["跟哈希种子有关系",{"2":{"16":1}}],["顾名思义就是修改次数",{"2":{"42":1}}],["域",{"2":{"42":1}}],["策略",{"2":{"42":1}}],["机制",{"0":{"42":1}}],["了",{"2":{"41":1}}],["均匀的把之前的冲突的节点分散到新的",{"2":{"41":1}}],["均为",{"2":{"29":1}}],["既省去了重新计算",{"2":{"41":1}}],["示意图",{"2":{"41":1}}],["红色",{"2":{"41":1}}],["红黑树中查找元素",{"0":{"40":1}}],["红黑树处理冲突",{"2":{"37":1}}],["红黑树实现的",{"0":{"33":1}}],["范围在高位多",{"2":{"41":1}}],["倍",{"2":{"41":1}}],["变为",{"2":{"41":1}}],["变成第一个大于等于",{"2":{"36":1}}],["两种",{"2":{"41":2}}],["图",{"2":{"41":2}}],["元素在重新计算",{"2":{"41":1}}],["元素的位置要么是在原来的位置",{"2":{"41":1}}],["元素按照",{"2":{"5":1}}],["元素按照大小顺序存储和遍历",{"2":{"4":1}}],["经过观测可以发现",{"2":{"41":1}}],["成功",{"2":{"50":1}}],["成功后",{"2":{"20":1}}],["成",{"2":{"41":1}}],["接下来就是在java层面需要考虑的事情了",{"2":{"68":1}}],["接下来的三个步骤是哈希桶数组",{"2":{"41":1}}],["接口文档工具",{"2":{"60":1}}],["接口声明了很多有用的方法",{"2":{"27":1}}],["接口扩展了",{"2":{"26":1}}],["接口包含",{"2":{"26":1}}],["接口中的所有方法轻松得多",{"2":{"24":1}}],["接口提供了一种用于访问任意容器中各个元素的抽象机制",{"2":{"23":1}}],["接口提供了三个集合视图",{"2":{"11":1}}],["接口提供了哪些不同的集合视图",{"0":{"11":1}}],["接口继承",{"2":{"9":1}}],["接口的非同步实现",{"2":{"31":1}}],["接口的每一个类都要提供如此多的例行方法将是一件很烦人的事情",{"2":{"27":1}}],["接口的",{"2":{"26":1}}],["接口的对象一起工作",{"2":{"26":1}}],["接口的对象",{"2":{"25":1}}],["接口的类表示",{"2":{"24":1}}],["接口的类到底是用",{"2":{"8":1}}],["接口的话还违反了面向对象的接口分离原则",{"2":{"8":1}}],["接口的实现类常用的有",{"2":{"4":1}}],["接口的实现类",{"0":{"3":1,"4":1,"5":1}}],["接口",{"0":{"8":1,"25":1},"2":{"8":1,"23":1,"24":1,"25":1,"26":1}}],["接口不继承",{"0":{"8":1}}],["接口常用的实现类有",{"2":{"3":1,"5":1}}],["550",{"2":{"45":1}}],["5",{"2":{"41":2}}],["3932",{"2":{"45":1}}],["3430",{"2":{"45":1}}],["318",{"2":{"45":1}}],["302",{"2":{"45":1}}],["373",{"2":{"44":1}}],["3765",{"2":{"44":1}}],["38144",{"2":{"44":1}}],["3",{"2":{"41":2,"50":2}}],["32",{"2":{"36":1,"41":1}}],["现在我们执行下面三条语句",{"2":{"41":1}}],["假设我们的",{"2":{"41":1}}],["假设为",{"2":{"36":1}}],["举个例子说明一下扩容过程",{"2":{"41":1}}],["767",{"2":{"45":1}}],["720",{"2":{"44":1}}],["75",{"2":{"44":1}}],["7",{"0":{"41":1,"43":1},"1":{"44":1,"45":1},"2":{"41":3,"44":2,"45":2}}],["相等就直接返回",{"2":{"40":1}}],["相反",{"2":{"26":1}}],["效率很高",{"2":{"40":1}}],["得到",{"2":{"40":1}}],["调用内部方法",{"2":{"40":1}}],["底层源码",{"2":{"40":1}}],["底层是由两层嵌套数组来实现的",{"2":{"17":1}}],["底层是数组+链表+红黑树",{"2":{"5":1}}],["底层是红黑树",{"2":{"4":1,"5":1}}],["底层是哈希表+双链表",{"2":{"5":1}}],["底层是哈希表+红黑树",{"2":{"4":1}}],["底层是哈希表",{"2":{"4":1}}],["继续查看",{"2":{"40":1}}],["继续下一步",{"2":{"39":1}}],["继承了",{"2":{"8":1}}],["转向第六步",{"2":{"39":3}}],["转换成红黑树处理",{"2":{"39":1}}],["哈希值不同并且",{"2":{"39":1}}],["哈希表的最小树形化容量",{"2":{"34":1}}],["超过最大容量",{"2":{"39":1}}],["超过阈值时",{"2":{"37":1}}],["超过阈值时就进行扩容",{"2":{"37":1}}],["⑥",{"2":{"39":1}}],["已经存在直接覆盖",{"2":{"39":2}}],["已经经历了很久",{"2":{"1":1}}],["⑤",{"2":{"39":1}}],["判断实际存在的键值对数量",{"2":{"39":1}}],["判断链表长度是否大于",{"2":{"39":1}}],["判断键值对数组",{"2":{"39":1}}],["判断返回",{"2":{"39":1}}],["判断",{"2":{"39":3,"42":1}}],["判断是否存在对应",{"2":{"39":1}}],["判断是否需要进行树化",{"2":{"20":1}}],["判断该链为红黑树",{"2":{"39":1}}],["④",{"2":{"39":1}}],["③",{"2":{"39":1}}],["②",{"2":{"39":1}}],["①",{"2":{"39":1}}],["步骤小总结",{"2":{"39":1}}],["步骤",{"2":{"39":6}}],["做家务时等各种场景下",{"2":{"59":1}}],["做了哪些优化",{"2":{"41":1}}],["做处理",{"2":{"39":1}}],["做",{"2":{"39":1}}],["源码分析",{"2":{"39":1}}],["才进行扩容的",{"2":{"37":1}}],["链式处理冲突",{"2":{"37":1}}],["链表长度大于",{"2":{"39":1}}],["链表",{"0":{"33":1},"2":{"31":1}}],["链表整体的插入查询效率要低于红黑树",{"2":{"14":1}}],["链表整体的插入查询效率要高于红黑树",{"2":{"14":1}}],["直接在树中插入键值对",{"2":{"39":1}}],["直接新建节点添加",{"2":{"39":1}}],["直接覆盖",{"2":{"39":1}}],["直接插入即可",{"2":{"37":1}}],["直接做与操作",{"2":{"36":1}}],["阈值",{"2":{"37":1}}],["zero",{"2":{"37":1}}],["扩充为",{"2":{"41":1}}],["扩为两倍",{"2":{"37":1}}],["扩容机制",{"0":{"41":1}}],["扩容",{"2":{"35":1,"39":1}}],["扩容过程中转移元素的逻辑不一样",{"2":{"16":1}}],["扩容的过程中",{"2":{"16":1}}],["没超过",{"2":{"37":1}}],["没有泛型",{"2":{"10":1}}],["旧容量",{"2":{"37":1}}],["原索引",{"2":{"41":1}}],["原位置",{"2":{"37":1}}],["原数组中的数据必须重新计算其在新数组中的位置",{"2":{"37":1}}],["方式",{"2":{"37":1}}],["方式非常巧妙",{"2":{"37":1}}],["方法可以发现",{"2":{"40":1}}],["方法进行查找",{"2":{"40":1}}],["方法是通过调用树形节点的",{"2":{"40":1}}],["方法是一个",{"2":{"36":1}}],["方法就是根据哈希表元素个数与哈希值求模",{"2":{"40":1}}],["方法执行过程",{"0":{"39":1}}],["方法上的注释",{"2":{"36":1}}],["方法获取一个哈希值",{"2":{"36":1}}],["方法先通过",{"2":{"36":1}}],["方法中都需要先计算",{"2":{"36":1}}],["方法主要做了三件事",{"2":{"35":1}}],["方法的调用具有互相依赖性",{"2":{"26":1}}],["方法和",{"2":{"26":1,"36":1}}],["方法将会删除上次调用",{"2":{"26":1}}],["方法将抛出一个",{"2":{"26":1}}],["方法来判断是否下一个元素是否为",{"2":{"26":1}}],["方法一样",{"2":{"18":1}}],["方法会先加锁",{"2":{"18":1}}],["方法存储一对",{"2":{"7":1}}],["方法",{"0":{"36":1,"37":1,"38":1},"1":{"39":1,"40":1,"41":1},"2":{"7":2,"18":1,"21":1,"26":2,"29":2,"36":1,"40":1,"42":1}}],["方法时返回的元素",{"2":{"26":1}}],["方法时",{"2":{"7":1,"18":1,"21":2}}],["冲突的几率也越来越高",{"2":{"37":1}}],["|=",{"2":{"36":5}}],["||",{"2":{"35":1,"39":5,"40":2}}],["决定了",{"2":{"36":1}}],["低位变化很小",{"2":{"36":1}}],["很小",{"2":{"36":1}}],["大型分布式项目的标配",{"2":{"60":1}}],["大于",{"2":{"39":1,"41":1}}],["大致意思就是通过这种最便捷的方式对一些移位位进行异或",{"2":{"36":1}}],["大小顺序存储和遍历",{"2":{"5":1}}],["大小顺序无关",{"2":{"4":1,"5":1}}],["quality",{"2":{"36":1}}],["queue",{"2":{"24":8}}],["位",{"2":{"37":1}}],["位的哈希值做一个异或操作来得到最后的哈希值",{"2":{"36":1}}],["位置生成一个",{"2":{"18":1}}],["^",{"2":{"36":1}}],["采用了二次哈希的方式",{"2":{"36":1}}],["采用链表保存结构对象",{"2":{"3":1}}],["上面的代码中",{"2":{"36":1}}],["上面扩容的原因是",{"2":{"15":1}}],["映射到哪个桶上",{"2":{"36":1}}],["建立起联系",{"2":{"35":1}}],["复制内容",{"2":{"35":1}}],["根据专辑查询声音",{"0":{"76":1}}],["根据二级分类进行分组",{"2":{"68":1}}],["根据一级分类进行分组",{"2":{"68":1}}],["根据一级分类id",{"2":{"67":1}}],["根据键值",{"2":{"39":1}}],["根据",{"2":{"39":1}}],["根据哈希表中元素个数确定是扩容还是树形化",{"2":{"35":1}}],["根据元素的自然顺序对指定",{"2":{"29":1}}],[">=",{"2":{"36":1,"37":2,"39":1}}],[">>>",{"2":{"36":6}}],[">",{"2":{"35":1,"37":2,"39":1,"40":1,"42":1,"68":3}}],["让桶的第一个元素指向新建的红黑树头节点",{"2":{"35":1}}],["确定索引位置的示例",{"2":{"41":2}}],["确定树的头节点",{"2":{"35":1}}],["确定好当前",{"2":{"18":1}}],["新建到nacos中",{"2":{"64":1}}],["新建一个树形节点",{"2":{"35":1}}],["新增的优化点",{"2":{"41":1}}],["新增红黑树",{"2":{"33":1}}],["新的",{"2":{"37":1}}],["http",{"2":{"58":2}}],["hitail",{"2":{"37":6}}],["hihead",{"2":{"37":3}}],["highest",{"2":{"36":1}}],["higher",{"2":{"36":2}}],["held",{"2":{"37":1}}],["handle",{"2":{"36":1}}],["hasnext",{"2":{"26":3}}],["hash1",{"2":{"41":1}}],["hashes",{"2":{"36":2}}],["hashentry",{"2":{"17":1,"18":2}}],["hashcode",{"2":{"16":1,"36":5,"39":2}}],["hash",{"0":{"36":1},"2":{"16":6,"35":4,"36":7,"37":4,"39":25,"40":10,"41":5,"44":2,"45":2}}],["hashmap",{"0":{"12":1,"13":1,"14":1,"15":1,"16":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"38":1,"39":1,"40":1},"1":{"31":1,"32":1,"33":2,"34":2,"35":2,"36":1,"37":1,"38":1,"39":2,"40":2,"41":2,"42":1,"43":1,"44":1,"45":1},"2":{"5":2,"12":1,"13":1,"16":2,"18":1,"21":2,"31":4,"36":3,"37":4,"40":1,"41":1,"42":4}}],["hashset",{"2":{"4":3}}],["hashtable",{"2":{"1":1,"23":1}}],["holding",{"2":{"36":1}}],["h",{"2":{"36":3,"40":2}}],["hd",{"2":{"35":4}}],["默认权限是",{"2":{"52":1}}],["默认",{"2":{"35":1}}],["默认是",{"2":{"35":1}}],["或者哈希表中元素的个数小于进行树形化的阈值",{"2":{"35":1}}],["桶占用",{"2":{"37":1}}],["桶的树形化",{"0":{"35":1}}],["桶中元素个数小于这个值时",{"2":{"34":1}}],["树形化选择的冲突",{"2":{"34":1}}],["否则每张表都有以下四个字段",{"2":{"65":1}}],["否则就遍历链表节点",{"2":{"40":1}}],["否则进行链表插入操作",{"2":{"39":1}}],["否则继续下一步",{"2":{"39":2}}],["否则执行",{"2":{"39":1}}],["否则",{"2":{"36":1}}],["否则桶内元素太多时会扩容",{"2":{"34":1}}],["否则返回",{"2":{"25":1}}],["表结构",{"0":{"68":1}}],["表示扩容后",{"2":{"41":1}}],["表示扩容前的",{"2":{"41":1}}],["表示有先后顺序的集合",{"2":{"7":1}}],["表中的桶才能进行树形化",{"2":{"34":1}}],["626",{"2":{"45":1}}],["627",{"2":{"45":1}}],["60707",{"2":{"44":1}}],["63",{"2":{"36":1}}],["6",{"2":{"34":2}}],["64",{"2":{"15":2,"34":1,"35":1,"36":1}}],["gt",{"2":{"65":2,"68":1}}],["groupingby",{"2":{"68":2}}],["grace",{"2":{"60":1}}],["greater",{"2":{"34":1}}],["git",{"2":{"60":1}}],["given",{"2":{"35":1,"36":1}}],["gateway的配置",{"2":{"64":1}}],["gateway",{"2":{"60":1}}],["getsize",{"2":{"69":1}}],["getsecrekey",{"2":{"69":1}}],["getinputstream",{"2":{"69":1}}],["getcontenttype",{"2":{"69":1}}],["getcategory3name",{"2":{"68":1}}],["getcategory3id",{"2":{"68":1}}],["getcategory2name",{"2":{"68":1}}],["getcategory2id",{"2":{"68":1}}],["getcategory1name",{"2":{"68":1}}],["getcategory1id",{"2":{"68":1}}],["getbucketname",{"2":{"69":1}}],["getbasecategorylist",{"2":{"68":5}}],["getaccesskey",{"2":{"69":1}}],["getendpointurl",{"2":{"69":2}}],["getvalue",{"2":{"68":2}}],["getkey",{"2":{"68":2}}],["getmapping",{"2":{"68":1}}],["gettingstart",{"0":{"46":1},"1":{"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1}}],["gettreenode",{"2":{"40":4}}],["getnode",{"0":{"40":1},"2":{"40":3}}],["getobjectvolatile",{"2":{"21":1}}],["get",{"0":{"45":1},"2":{"7":2,"36":1,"40":2,"60":1,"68":2}}],["run",{"2":{"60":1}}],["root",{"2":{"40":2}}],["randomuuid",{"2":{"69":1}}],["rabbitmq",{"0":{"50":1},"2":{"50":10,"60":1}}],["rawtypes",{"2":{"37":1}}],["rather",{"2":{"34":1}}],["right",{"2":{"33":1}}],["requirepass",{"2":{"51":1}}],["result",{"2":{"68":2,"69":2}}],["restart",{"2":{"50":1}}],["resizing",{"2":{"34":1}}],["resizes",{"2":{"35":1}}],["resized",{"2":{"34":1}}],["resize",{"0":{"37":1},"2":{"34":1,"35":1,"37":3,"39":3,"41":3}}],["recordaccess",{"2":{"39":1}}],["related",{"2":{"39":1,"40":1}}],["rehash",{"0":{"37":1},"2":{"37":4,"41":1}}],["reasonably",{"2":{"36":1}}],["read",{"2":{"26":2}}],["replaced",{"2":{"39":2}}],["replacementtreenode",{"2":{"35":2}}],["replaces",{"2":{"35":1}}],["replaceall",{"2":{"29":1}}],["removal",{"2":{"34":2}}],["remove",{"2":{"24":1,"26":7,"42":1}}],["redisson",{"2":{"60":1}}],["redis",{"0":{"51":1},"2":{"46":1,"51":1,"60":2}}],["reduce",{"2":{"36":1}}],["red",{"2":{"33":2}}],["regular",{"2":{"33":1}}],["reverse",{"2":{"29":1}}],["returns",{"2":{"36":1}}],["return",{"2":{"24":8,"27":2,"35":1,"36":2,"37":3,"39":11,"40":6,"68":5,"69":2}}],["reentrantlock",{"2":{"21":2}}],["primary",{"2":{"65":1}}],["private",{"2":{"52":1,"65":4,"68":2,"69":2}}],["properties中的nacos配置修改为自己本机的配置",{"2":{"64":1}}],["protected",{"2":{"51":1}}],["preserve",{"2":{"37":1}}],["previous",{"2":{"39":3}}],["previously",{"2":{"39":4}}],["prev",{"2":{"33":1,"35":1}}],["plus",{"2":{"60":1}}],["plugins",{"2":{"50":6}}],["placed",{"2":{"37":1}}],["plain",{"2":{"34":1}}],["param",{"2":{"39":9,"40":2}}],["parent",{"2":{"33":1,"40":1,"64":1}}],["postconstruct",{"2":{"69":1}}],["postmapping",{"2":{"69":1}}],["possible",{"2":{"36":1}}],["power",{"2":{"36":2,"37":2}}],["p",{"2":{"35":9,"39":10,"69":1}}],["public",{"2":{"24":8,"39":2,"52":1,"68":2,"69":4}}],["putobject",{"2":{"69":1}}],["putobjectargs",{"2":{"69":4}}],["putorderedobject",{"2":{"21":1}}],["putfornullkey",{"2":{"39":1}}],["puttreeval",{"2":{"39":1}}],["putval",{"2":{"39":2}}],["putifabsent",{"2":{"16":1}}],["put",{"0":{"18":1,"20":1,"38":1,"39":1,"44":1},"1":{"39":1,"40":1,"41":1},"2":{"7":1,"18":4,"20":2,"21":3,"36":1,"39":4,"41":3,"68":8}}],["knife4j",{"2":{"60":1}}],["known",{"2":{"36":1}}],["kafka",{"0":{"56":1}}],["k",{"2":{"33":6,"35":7,"37":9,"39":17,"40":13,"42":1}}],["key2",{"2":{"41":2}}],["key1",{"2":{"41":3}}],["keys",{"2":{"36":1}}],["keyset",{"2":{"7":1,"11":1}}],["key",{"2":{"5":3,"6":2,"7":7,"11":1,"16":2,"18":4,"20":2,"21":1,"35":1,"36":8,"39":51,"40":16,"41":4,"65":1}}],["uuid",{"2":{"69":1}}],["ui",{"2":{"60":2}}],["updatetime",{"2":{"65":1}}],["update",{"2":{"65":3}}],["upload",{"2":{"58":1,"69":2}}],["upon",{"2":{"33":1,"34":1}}],["url",{"2":{"58":3}}],["util",{"2":{"42":1}}],["utility",{"2":{"36":1}}],["use",{"2":{"36":1}}],["uses",{"2":{"36":1}}],["used",{"2":{"33":1,"36":1}}],["using",{"2":{"34":1,"37":2}}],["uni",{"2":{"60":1}}],["uniapp",{"2":{"60":2}}],["unchecked",{"2":{"37":1}}],["unless",{"2":{"35":1}}],["unlink",{"2":{"33":1}}],["untreeify",{"2":{"34":2}}],["untreeifying",{"2":{"34":1}}],["under",{"2":{"34":1}}],["unsafe",{"2":{"21":2,"22":2}}],["lt",{"2":{"68":1}}],["l|grep",{"2":{"50":1}}],["ls",{"2":{"50":1}}],["large",{"2":{"36":1}}],["long",{"2":{"65":1,"68":2}}],["lombok",{"2":{"60":1}}],["lotail",{"2":{"37":6}}],["lohead",{"2":{"37":3}}],["loadfactor",{"2":{"37":1,"41":1}}],["load",{"2":{"37":1}}],["lossage",{"2":{"36":1}}],["lower",{"2":{"36":1}}],["logn",{"2":{"31":1}}],["length",{"2":{"35":1,"37":1,"39":3,"40":1,"42":1}}],["less",{"2":{"34":1}}],["least",{"2":{"34":3}}],["left",{"2":{"33":1}}],["linux",{"2":{"47":1}}],["links",{"2":{"33":1}}],["linked",{"2":{"33":1,"35":1}}],["linkedhashmap",{"2":{"5":2,"33":2}}],["linkedhashset",{"2":{"4":2}}],["linkedlistqueue",{"2":{"24":2}}],["linkedlist",{"2":{"3":4,"24":1}}],["library",{"2":{"24":1}}],["listiterator",{"0":{"9":1},"2":{"9":3}}],["list",{"0":{"3":1,"6":1,"7":1},"2":{"3":2,"6":2,"7":5,"9":2,"29":15,"34":1,"68":8}}],["针对这种情况",{"2":{"31":1}}],["完全失去了它的优势",{"2":{"31":1}}],["遍历以二级分类为分组的数据",{"2":{"68":1}}],["遍历过程中若发现",{"2":{"39":1}}],["遍历",{"2":{"39":1}}],["遍历当前索引的冲突链",{"2":{"39":1}}],["遍历旧哈希表的每个桶",{"2":{"37":1}}],["遍历的时间复杂度就是",{"2":{"31":1}}],["遍历元素可以体现添加顺序",{"2":{"5":1}}],["遍历元素可以体现添加时顺序",{"2":{"4":1}}],["遍历元素和添加顺序",{"2":{"4":1,"5":1}}],["个元素",{"2":{"31":1}}],["个方法",{"2":{"26":1}}],["加入单链表有",{"2":{"31":1}}],["加锁成功后再将待插入的",{"2":{"21":1}}],["加锁成功之后",{"2":{"20":1}}],["数据库层面要做的事情考虑好了",{"2":{"68":1}}],["数据下标",{"2":{"18":1}}],["数组扩容之后",{"2":{"37":1}}],["数组扩容这个操作也会出现在",{"2":{"37":1}}],["数组",{"2":{"31":1}}],["以二级分类的id为key",{"2":{"68":1}}],["以一级分类的id为key",{"2":{"68":1}}],["以一级分类id作为key",{"2":{"68":1}}],["以更加灵活的方式享受阅读",{"2":{"59":1}}],["以后都冲突在",{"2":{"41":1}}],["以后这个桶里的元素就是红黑树而不是链表了",{"2":{"35":1}}],["以及",{"2":{"39":1}}],["以及合并最高位的影响",{"2":{"36":1}}],["以及对迭代器返回的",{"2":{"11":1}}],["以前",{"2":{"31":1}}],["特别是它不保证该顺序恒久不变",{"2":{"31":1}}],["键值对个数",{"2":{"37":1}}],["键",{"2":{"31":1}}],["传统",{"0":{"31":1}}],["该链为链表",{"2":{"39":1}}],["该方法可以将指定集合包装成线程同步的集合",{"2":{"29":1}}],["该位置不为空",{"2":{"22":1}}],["同步时间",{"2":{"69":1}}],["同步机制",{"2":{"29":1}}],["同样的",{"2":{"64":1}}],["同时",{"2":{"68":2,"69":1}}],["同时由于新增的",{"2":{"41":1}}],["同时一个线程在",{"2":{"20":1}}],["date",{"2":{"65":2}}],["distributed",{"2":{"36":1}}],["during",{"2":{"34":1}}],["deleted",{"2":{"65":2}}],["deletion",{"2":{"33":1}}],["delay",{"2":{"50":1}}],["delayed",{"2":{"50":3}}],["defaults",{"2":{"37":1}}],["default",{"2":{"37":4,"65":3}}],["detection",{"2":{"34":1}}],["dest",{"2":{"29":1}}],["docker",{"0":{"48":1},"1":{"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1},"2":{"46":6,"50":3,"60":2}}],["double",{"2":{"37":1}}],["doubles",{"2":{"37":1}}],["don",{"2":{"36":1,"39":1}}],["downward",{"2":{"36":1}}],["do",{"2":{"26":1,"35":1,"37":1,"40":1,"42":1}}],["multipartfile",{"2":{"69":2}}],["must",{"2":{"34":1,"37":1}}],["mybatis",{"2":{"60":2}}],["mysql返回的结果中有大量的一级分类和二级分类的重复",{"2":{"68":1}}],["mysqlcreate",{"2":{"68":1}}],["mysqlselect",{"2":{"68":1}}],["mysqlid",{"2":{"65":1}}],["mysql",{"0":{"49":1},"2":{"46":1,"60":1}}],["message",{"2":{"50":3}}],["mesh",{"2":{"34":2}}],["methods",{"2":{"39":1,"40":1}}],["mongodb",{"0":{"53":1},"2":{"60":1}}],["modcount",{"2":{"42":4}}],["modcount++",{"2":{"39":1}}],["mod",{"2":{"41":2}}],["mode",{"2":{"39":1,"51":1}}],["move",{"2":{"37":1}}],["most",{"2":{"34":1}}],["minioclient",{"2":{"69":7}}],["minioconstantproperties",{"2":{"69":7}}],["minio服务器地址",{"2":{"69":1}}],["minio",{"0":{"52":1},"2":{"60":1}}],["min",{"2":{"29":2,"34":2,"35":1}}],["makebucket",{"2":{"69":1}}],["makebucketargs",{"2":{"69":4}}],["mask",{"2":{"36":1,"41":1}}],["masking",{"2":{"36":1}}],["may",{"2":{"34":1}}],["many",{"2":{"34":2,"36":1}}],["maximum",{"2":{"36":2,"37":4}}],["max",{"2":{"29":2,"37":2}}],["map是最符合要求的",{"2":{"68":1}}],["mapping",{"2":{"39":5}}],["map",{"0":{"5":1,"6":1,"7":1,"8":1,"11":1},"2":{"5":1,"6":2,"7":5,"8":5,"11":16,"29":1,"31":1,"39":7,"40":1,"41":2,"42":2,"68":5}}],["自行修改config",{"2":{"58":1}}],["自然排序后",{"2":{"29":1}}],["自带可重入锁",{"2":{"21":1}}],["自带的集合类",{"2":{"1":1}}],["替换桶的链表内容为树形内容",{"2":{"35":1}}],["替换",{"2":{"29":1}}],["替换一个元素",{"2":{"9":1}}],["查看它的源码可以发现",{"2":{"69":1}}],["查找时间复杂度为",{"2":{"31":1}}],["查找",{"2":{"29":1}}],["查询这个分类下所有的二级和三级分类数据",{"2":{"67":1}}],["查询专辑标签",{"2":{"65":1}}],["查询和修改等操作",{"2":{"29":1}}],["查询性能得到了保障",{"2":{"16":1}}],["出元素进行交换",{"2":{"29":1}}],["出元素和",{"2":{"29":1}}],["排序操作",{"2":{"29":1}}],["工具类",{"0":{"29":1}}],["抽象化了",{"2":{"27":1}}],["有助于扩大影响力和读者群",{"2":{"59":1}}],["有助于提高可访问性",{"2":{"59":1}}],["有助于吸引更多读者",{"2":{"59":1}}],["有趣的阅读体验",{"2":{"59":1}}],["有声书主要是由专业的演员朗读",{"2":{"59":1}}],["有声书的出现使得人们可以在旅途中",{"2":{"59":1}}],["有些文章指出当哈希表的",{"2":{"37":1}}],["有很多方法的功能非常明确",{"2":{"27":1}}],["有时候",{"2":{"7":1}}],["事实上",{"2":{"27":1}}],["下载安装微信开发者工具",{"2":{"58":1}}],["下载对应版本配置文件",{"2":{"51":1}}],["下载地址",{"2":{"50":1}}],["下图为",{"2":{"41":1}}],["下面我们看一下",{"2":{"41":1}}],["下面是一个检测任意结合是否包含指定元素的泛型方法",{"2":{"27":1}}],["下一次调用",{"2":{"26":1}}],["都需要向mysql发送这个请求",{"2":{"68":1}}],["都需要在nacos中添加对应的配置",{"2":{"64":1}}],["都是泛型接口",{"2":{"27":1}}],["都不可重复",{"2":{"5":1}}],["泛型实用方法",{"0":{"27":1}}],["泛型算法",{"2":{"23":1}}],["越过将要删除的元素",{"2":{"26":1}}],["必须先调用",{"2":{"26":1}}],["异常",{"2":{"26":1}}],["仍然需要越过这个元素",{"2":{"26":1}}],["然而",{"2":{"26":1}}],["然后执行",{"2":{"50":2}}],["然后所有的",{"2":{"41":1}}],["然后才进行之后的操作",{"2":{"36":1}}],["然后让桶第一个元素指向新建的树头节点",{"2":{"35":1}}],["然后解锁",{"2":{"18":1}}],["然后将",{"2":{"18":1}}],["然后也根据",{"2":{"18":1}}],["然后调用",{"2":{"18":1}}],["然后再一次性转移",{"2":{"16":1}}],["然后添加了一些额外的功能",{"2":{"9":1}}],["消息中间件",{"2":{"60":1}}],["消耗掉",{"2":{"26":1}}],["消除源代码中的许多强制类型转换",{"2":{"10":1}}],["消除强制类型转换",{"2":{"10":1}}],["看下面这张图",{"2":{"41":1}}],["看图说话",{"2":{"39":1}}],["看作为等效的",{"2":{"26":1}}],["看一下人们熟悉的数据结构",{"2":{"24":1}}],["对应的也就是所有实体类都继承的baseentity类中的四个属性",{"2":{"65":1}}],["对应的哈希与高位运算结果",{"2":{"41":1}}],["对于minioclient",{"2":{"69":1}}],["对于这些信息",{"2":{"69":1}}],["对于返回结果的设计是",{"2":{"68":1}}],["对于多表查询",{"2":{"68":1}}],["对于基础开发环境",{"2":{"46":1}}],["对于标准类库中的任何集合都可以使用",{"2":{"26":1}}],["对集合对象实现同步控制等方法",{"2":{"29":1}}],["对",{"2":{"26":1,"29":1,"39":1,"42":1}}],["对象放入该位置",{"2":{"18":1}}],["对象的所有旧值",{"2":{"29":1}}],["对象的",{"2":{"18":2}}],["对象的集合",{"2":{"7":1}}],["对象",{"2":{"18":1}}],["对象中",{"2":{"18":1}}],["对象中有一个属性",{"2":{"17":2}}],["\\tdo",{"2":{"26":1}}],["循环",{"2":{"26":1}}],["循环可以与任何实现了",{"2":{"26":1}}],["循环可以更加简练地表示同样的操作",{"2":{"26":1}}],["循环翻译为带有迭代器的循环",{"2":{"26":1}}],["循环或者迭代器逐一遍历各个元素",{"2":{"7":1}}],["ws",{"2":{"58":1}}],["was",{"2":{"37":1,"39":2}}],["way",{"2":{"36":1}}],["would",{"2":{"36":1}}],["websocket",{"2":{"58":2}}],["websocket基础路径",{"2":{"58":1}}],["weixin导入",{"2":{"58":1}}],["well",{"2":{"36":1}}],["we",{"2":{"36":3,"37":1}}],["windows10",{"2":{"47":1}}],["will",{"2":{"36":1}}],["with",{"2":{"26":2,"34":3,"37":2,"39":10}}],["whole",{"2":{"36":1}}],["when",{"2":{"34":1}}],["which",{"2":{"33":1,"34":1,"35":1,"39":2}}],["while",{"2":{"26":1,"35":1,"37":1,"40":1,"42":1}}],["需要操作的bucket",{"2":{"69":1}}],["需要传入一些必备参数",{"2":{"69":1}}],["需要使用的minioclient容器",{"2":{"69":1}}],["需要使用红黑树节点替换链表节点",{"2":{"34":1}}],["需要调整一下linux",{"2":{"69":1}}],["需要消耗较多的资源",{"2":{"68":1}}],["需要在调用",{"2":{"26":1}}],["需要遍历链表",{"2":{"16":1}}],["4294",{"2":{"45":1}}],["4",{"2":{"26":1,"34":2,"36":1,"41":1}}],["因为",{"2":{"41":1}}],["因为添加时已经保证这个树是有序的",{"2":{"40":1}}],["因为每次扩容都是翻倍",{"2":{"37":1}}],["因为数组长度是固定的",{"2":{"37":1}}],["因为集合中不允许存在重复的对象",{"2":{"25":1}}],["因此我们可以考虑让这个做到不需要每一次请求分类数据都要执行复杂sql",{"2":{"68":1}}],["因此在这里使用内连接",{"2":{"68":1}}],["因此又设计了两张表base",{"2":{"68":1}}],["因此只在这里说明一次",{"2":{"63":1}}],["因此你可以将",{"2":{"46":1}}],["因此如果在使用迭代器的过程中有其它线程修改了",{"2":{"42":1}}],["因此新的",{"2":{"41":1}}],["因此",{"2":{"24":1,"26":2,"41":2,"42":2,"46":1,"68":1}}],["因此直接使用尾插法",{"2":{"16":1}}],["因此相比",{"2":{"3":1}}],["例如使用",{"2":{"60":1}}],["例如",{"2":{"24":1,"25":1,"26":1,"27":2,"36":1}}],["==",{"2":{"35":2,"36":1,"37":6,"39":13,"40":4,"42":1}}],["=",{"2":{"24":3,"26":3,"34":3,"35":15,"36":2,"37":40,"39":28,"40":14,"41":3,"42":7,"44":1,"58":3,"65":1,"68":14,"69":6}}],["再根据二级分类进行分组",{"2":{"68":1}}],["再进行",{"2":{"39":1}}],["再拿这个哈希值与它的高",{"2":{"36":1}}],["再指明具体的接口实现类",{"2":{"24":1}}],["再判断该元素类型",{"2":{"20":1}}],["ntpq",{"2":{"69":1}}],["ntpd",{"2":{"69":2}}],["ntp",{"2":{"69":2}}],["name",{"2":{"68":12}}],["natapp",{"2":{"60":1}}],["native",{"2":{"36":1}}],["nacos",{"0":{"54":1}}],["ns",{"2":{"44":4,"45":4}}],["numbers",{"2":{"36":1}}],["null",{"2":{"24":3,"26":1,"31":2,"35":8,"36":1,"37":17,"39":23,"40":10,"42":3,"65":3,"68":1}}],["not",{"2":{"65":3}}],["none",{"2":{"39":1,"40":1}}],["no",{"2":{"39":2,"51":1}}],["nodes",{"2":{"34":2,"35":1}}],["node",{"2":{"33":2,"35":4,"37":9,"39":3,"40":6,"41":1,"42":1}}],["nosuchelementexception",{"2":{"26":1}}],["n",{"2":{"31":2,"35":3,"36":18,"37":1,"39":4,"40":4,"41":3}}],["never",{"2":{"36":1}}],["needed",{"2":{"33":1}}],["next",{"2":{"26":13,"33":1,"35":4,"37":9,"39":3,"40":2,"42":2}}],["newnode",{"2":{"39":2}}],["newtab",{"2":{"37":7}}],["newthr",{"2":{"37":6}}],["newcap",{"2":{"37":8}}],["newval",{"2":{"29":1}}],["new",{"2":{"24":3,"35":1,"37":2,"68":3}}],["具体做法就是在创建一个集合对象时",{"2":{"24":1}}],["具有相似性",{"2":{"7":1}}],["指出",{"2":{"42":1}}],["指向原有的",{"2":{"39":1}}],["指的是",{"2":{"36":1}}],["指的是哈希表的大小",{"2":{"36":1}}],["指的是容器中对于同一个",{"2":{"5":1}}],["指明你需要使用的接口实现类",{"2":{"24":1}}],["解释一下集合接口与实现在概念上的不同",{"2":{"24":1}}],["实体类中生成",{"2":{"60":1}}],["实现的云原生应用开发工具",{"2":{"60":1}}],["实现了可变的数组",{"2":{"3":1}}],["实战教程",{"2":{"46":1}}],["实际上是当哈希表中的",{"2":{"37":1}}],["实际上只使用了哈希值的后六位",{"2":{"36":1}}],["实际上",{"2":{"24":1}}],["注释",{"2":{"24":1,"26":1,"51":1}}],["注意将appid换成自己的",{"2":{"58":1}}],["注意保存好",{"2":{"58":1}}],["注意",{"2":{"7":1,"42":1}}],["feign",{"2":{"60":1}}],["ft",{"2":{"37":3}}],["fast",{"0":{"42":1},"2":{"42":1}}],["fail",{"0":{"42":1},"2":{"42":1}}],["factor",{"2":{"37":1}}],["false",{"2":{"24":4,"25":2,"27":1,"39":3}}],["filename",{"2":{"69":3}}],["fileutil",{"2":{"69":2}}],["fileupload",{"2":{"69":2}}],["fileuploadapicontrollerfileutil",{"2":{"69":1}}],["file",{"2":{"69":6}}],["find",{"2":{"40":4}}],["final",{"2":{"33":1,"34":3,"35":1,"36":2,"37":1,"39":1,"40":2}}],["first",{"2":{"40":9,"42":1}}],["field",{"2":{"37":1}}],["from",{"2":{"36":1,"37":1,"68":2}}],["frequency",{"2":{"29":1}}],["float",{"2":{"36":1,"37":3}}],["foreach",{"2":{"26":4}}],["form",{"2":{"24":1}}],["for",{"2":{"7":1,"27":1,"33":1,"34":4,"35":2,"36":1,"37":1,"39":9,"40":2}}],["build",{"2":{"69":4}}],["builder",{"2":{"69":4}}],["bucketexists",{"2":{"69":1}}],["bucketexistsargs",{"2":{"69":4}}],["bucketname",{"2":{"69":5}}],["bucket",{"2":{"41":1,"52":1,"69":3}}],["basecategoryservice",{"2":{"68":3}}],["basecategoryapicontrollerbasecategoryservicebasecategoryserviceimpl",{"2":{"68":1}}],["basecategoryview>>",{"2":{"68":2}}],["basecategoryview>",{"2":{"68":3}}],["basecategoryviewmapper",{"2":{"68":3}}],["basecategoryview",{"2":{"68":3}}],["base",{"2":{"58":3,"68":11}}],["bash",{"2":{"50":1}}],["back",{"2":{"34":1}}],["b",{"2":{"41":2}}],["break",{"2":{"39":2}}],["boot",{"2":{"60":1}}],["boolean",{"2":{"24":4,"27":1,"29":1,"33":1,"39":2}}],["bounds",{"2":{"36":2}}],["black",{"2":{"33":1}}],["benefit",{"2":{"36":1}}],["because",{"2":{"36":4,"37":1}}],["between",{"2":{"34":1,"36":1}}],["be",{"2":{"33":1,"34":5,"36":1,"39":4}}],["bigint",{"2":{"65":1}}],["bit",{"2":{"36":1,"37":1,"41":1}}],["bits",{"2":{"36":5}}],["bitset",{"2":{"23":1}}],["bind",{"2":{"51":1}}],["bincount",{"2":{"39":2}}],["bin",{"2":{"34":6,"35":1,"37":1,"50":1}}],["bins",{"2":{"33":1,"34":3,"36":1}}],["0x111111",{"2":{"36":1}}],["0",{"2":{"24":2,"36":2,"37":7,"39":2,"40":1,"41":3,"42":2,"44":1,"50":2,"51":2,"58":6,"65":1,"68":2}}],["另一种是使用链表",{"2":{"24":1}}],["另外",{"2":{"7":1}}],["一级分类以及二级分类都不是唯一的记录",{"2":{"68":1}}],["一级分类还具有属性",{"2":{"68":1}}],["一般来说",{"2":{"42":1}}],["一样",{"2":{"39":1}}],["一致",{"2":{"35":1}}],["一旦构建了集合就不需要知道究竟使用了哪种实现",{"2":{"24":1}}],["一种是使用循环数组",{"2":{"24":1}}],["一个树的链表还原阈值",{"2":{"34":1}}],["一个桶的树化阈值",{"2":{"34":1}}],["一个",{"2":{"20":1}}],["一个对象可以被反复存储进",{"2":{"7":1}}],["一个常见实现类",{"2":{"3":1}}],["on",{"2":{"65":1,"68":4}}],["onlyifabsent",{"2":{"39":3}}],["only",{"2":{"36":1}}],["old",{"2":{"39":2}}],["oldthr",{"2":{"37":4}}],["oldtab",{"2":{"37":7}}],["oldcap",{"2":{"37":9,"41":1}}],["oldvalue",{"2":{"39":7}}],["oldval",{"2":{"29":1}}],["otherwise",{"2":{"34":1,"36":1,"37":1}}],["operation",{"2":{"34":1}}],["order",{"2":{"37":1}}],["or",{"2":{"33":1,"37":2,"39":3,"40":1}}],["obj",{"2":{"27":2}}],["object",{"2":{"7":3,"24":2,"27":1,"29":7,"36":1,"39":1,"40":2,"69":1}}],["ok",{"2":{"26":1,"68":1,"69":1}}],["o",{"2":{"24":2,"31":2}}],["override",{"2":{"24":8,"68":1}}],["offset",{"2":{"37":1}}],["of",{"2":{"24":1,"33":1,"36":11,"37":2}}],["队列通常有两种实现方式",{"2":{"24":1}}],["队列接口的最简形式可能类似下面这样",{"2":{"24":1}}],["队列接口指出可以在队列的尾部添加元素",{"2":{"24":1}}],["队列",{"2":{"24":1}}],["分页",{"0":{"73":1}}],["分别对应了一级分类",{"2":{"68":1}}],["分类业务主要涉及以下三个功能",{"2":{"67":1}}],["分类业务",{"0":{"66":1},"1":{"67":1,"68":1}}],["分库分表",{"2":{"60":1}}],["分布式文件存储",{"2":{"60":1}}],["分布式文件存储的数据库",{"2":{"60":1}}],["分布式定时任务调用中心",{"2":{"60":1}}],["分布式事务最终一致性",{"2":{"60":1}}],["分析",{"0":{"38":1},"1":{"39":1,"40":1,"41":1}}],["分离",{"2":{"24":1}}],["分段属越高则支持的最大并发量越高",{"2":{"21":1}}],["分段思想是为了提高",{"2":{"21":1}}],["分段思想",{"2":{"21":1}}],["将上面sql执行的结果保存在一个视图中",{"2":{"68":1}}],["将mp",{"2":{"58":1}}],["将其修改为",{"2":{"52":1}}],["将刚插件拷贝到容器内",{"2":{"50":1}}],["将新添加的",{"2":{"39":1}}],["将桶内所有的链表节点替换成红黑树节点",{"2":{"35":1}}],["将指定",{"2":{"29":1}}],["将会抛出",{"2":{"26":1}}],["将会消耗并返回输入的下一个字节",{"2":{"26":1}}],["将是不合法的",{"2":{"26":1}}],["将集合的接口与实现分离",{"0":{"24":1}}],["将简单类型作为引用类型传递时会引起",{"2":{"10":1}}],["率先推出的",{"2":{"23":1}}],["那样复杂",{"2":{"23":1}}],["那么每次需要获取分类数据的时候",{"2":{"68":1}}],["那么在mysql层面",{"2":{"68":1}}],["那么在迭代器初始化过程中会将这个值赋给迭代器的",{"2":{"42":1}}],["那么将抛出",{"2":{"42":1}}],["那么",{"2":{"16":1,"36":1,"41":1}}],["那么所有实现了",{"2":{"8":1}}],["标准模板库",{"2":{"23":1}}],["他们希望让类库规模小且易于学习",{"2":{"23":1}}],["2028",{"2":{"45":1}}],["2000",{"2":{"45":1}}],["2167",{"2":{"45":1}}],["2773",{"2":{"45":1}}],["2500",{"2":{"44":1}}],["267",{"2":{"44":1}}],["2",{"2":{"23":1,"34":1,"36":4,"41":5}}],["随着智能手机和高速互联网的普及",{"2":{"59":1}}],["随着",{"2":{"23":1}}],["随着集合的广泛使用",{"2":{"1":1}}],["向某个位置的红黑树插入节点",{"2":{"22":1}}],["插入成功后",{"2":{"39":1}}],["插入完成后解锁",{"2":{"21":1}}],["插入到小型",{"2":{"21":1}}],["类的",{"2":{"42":1}}],["类中提供了多个",{"2":{"29":1}}],["类库提供了一个类",{"2":{"27":1}}],["类库的使用者就不必自己重新构建这些方法了",{"2":{"27":1}}],["类库设计者认为",{"2":{"27":1}}],["类库中",{"2":{"25":1}}],["类库没有名为",{"2":{"24":1}}],["类要比实现",{"2":{"24":1}}],["类",{"2":{"24":2}}],["类继承了",{"2":{"21":1}}],["类型为",{"2":{"17":2}}],["类型安全",{"2":{"10":1}}],["类型的键值对数据集合",{"2":{"6":1}}],["最终",{"2":{"68":1}}],["最终会调用到",{"2":{"21":1}}],["最消耗性能的点就出现了",{"2":{"37":1}}],["最高位将用于不会用于索引计算",{"2":{"36":1}}],["最初的版本只为最常用的数据结构提供了很少的一组类",{"2":{"23":1}}],["最初的",{"2":{"1":1}}],["程序员可以通过",{"2":{"21":1}}],["主要负责在需要操作某个位置时进行加锁",{"2":{"22":1}}],["主要负责并发安全的修改对象属性或数组某个位置的值",{"2":{"22":1}}],["主要使用了",{"2":{"21":1}}],["主要利用",{"2":{"21":1,"22":1}}],["++size",{"2":{"39":1}}],["++modcount",{"2":{"39":1}}],["++bincount",{"2":{"39":1}}],["++j",{"2":{"37":1}}],["+",{"0":{"33":2},"2":{"21":2,"22":1,"31":1,"36":1,"37":2,"41":1,"47":1,"65":1,"69":4}}],["如何使用它的java",{"2":{"69":1}}],["如何保证并发",{"0":{"21":1,"22":1}}],["如调整朗读速度",{"2":{"59":1}}],["如果使用上面的sql语句",{"2":{"68":1}}],["如果有需要",{"2":{"58":1}}],["如果从结构上对映射进行修改",{"2":{"42":1}}],["如果不相等就表示已经有其它线程修改了",{"2":{"42":1}}],["如果不是",{"2":{"36":1}}],["如果对比节点的哈希值和要查找的哈希值相等",{"2":{"40":1}}],["如果头节点恰好是红黑树节点",{"2":{"40":1}}],["如果超过",{"2":{"39":1}}],["如果超过一定次数就会直接阻塞",{"2":{"18":1}}],["如果相同直接覆盖",{"2":{"39":1}}],["如果桶上只有一个键值对",{"2":{"37":1}}],["如果当前容量超过最大容量",{"2":{"37":1}}],["如果当前哈希表为空",{"2":{"35":1}}],["如果哈希表中的元素个数超过了树形化阈值",{"2":{"35":1}}],["如果一个桶中的元素个数超过",{"2":{"35":1}}],["如果实现",{"2":{"27":1}}],["如果想删除两个相邻的元素",{"2":{"26":1}}],["如果想要查看集合中的所有元素",{"2":{"26":1}}],["如果想要实现自己的队列类",{"2":{"24":1}}],["如果这样做",{"2":{"26":1}}],["如果调用",{"2":{"26":1}}],["如果先要删除指定位置上的元素",{"2":{"26":1}}],["如果到了集合的末尾",{"2":{"26":1}}],["如果你试图向集合中添加一个已经存在的对象",{"2":{"25":1}}],["如果添加成功就返回",{"2":{"25":1}}],["如果需要一个链表队列",{"2":{"24":1}}],["如果需要一个循环数组队列",{"2":{"24":1}}],["如果需要",{"2":{"20":1}}],["如果是",{"2":{"39":1}}],["如果是树形化遍历桶中的元素",{"2":{"35":1}}],["如果是红黑树则添加节点到红黑树中",{"2":{"20":1}}],["如果是链表节点则进行添加节点到链表中",{"2":{"20":1}}],["如果该位置有元素",{"2":{"20":1}}],["如果该位置没有元素",{"2":{"20":1}}],["如果数组长度还比较小",{"2":{"15":1}}],["如果数组长度小于",{"2":{"15":1}}],["如果继承了",{"2":{"8":1}}],["如果",{"2":{"8":1,"18":1,"36":1,"39":2}}],["会发生什么",{"2":{"36":1}}],["会发现扩展",{"2":{"24":1}}],["会发现另外一组名字以",{"2":{"24":1}}],["会返回",{"2":{"25":1}}],["会先利用可重入锁加锁",{"2":{"21":1}}],["会继续判断是否要进行扩容",{"2":{"20":1}}],["会加锁",{"2":{"20":1}}],["127",{"2":{"51":1,"58":3}}],["12",{"2":{"50":2}}],["19",{"2":{"45":1}}],["154319",{"2":{"44":1}}],["14950",{"2":{"45":1}}],["14137",{"2":{"44":1}}],["14310",{"2":{"44":1}}],["111",{"2":{"51":1}}],["1182",{"2":{"44":1}}],["1188",{"2":{"44":1}}],["115",{"2":{"44":1}}],["1100",{"2":{"44":1}}],["101",{"2":{"68":1}}],["1019",{"2":{"44":1}}],["1036",{"2":{"51":1}}],["1047",{"2":{"45":1}}],["1023",{"2":{"44":1}}],["1003",{"2":{"68":1}}],["1002",{"2":{"68":1}}],["1001",{"2":{"68":1}}],["100000",{"2":{"44":2,"45":2}}],["10000",{"2":{"44":2,"45":2}}],["1000",{"2":{"44":2,"45":2}}],["100",{"2":{"44":2,"45":2}}],["10",{"2":{"44":2,"45":2}}],["1bit",{"2":{"41":2}}],["1st",{"2":{"39":1}}],["17",{"2":{"36":1}}],["1379",{"2":{"51":1}}],["13",{"2":{"36":1,"45":1}}],["16447",{"2":{"45":1}}],["16",{"2":{"36":6,"41":1}}],["1",{"2":{"20":2,"35":1,"36":6,"37":4,"39":3,"40":2,"41":6,"51":2,"58":3,"68":1,"69":1}}],["添加专辑",{"2":{"65":1}}],["添加成功后",{"2":{"20":1}}],["添加操作",{"2":{"11":3}}],["计算出",{"2":{"39":1}}],["计算出对应的",{"2":{"18":2}}],["计算",{"2":{"39":2}}],["计算节点新位置",{"2":{"37":1}}],["计算扩容后的大小",{"2":{"37":1}}],["计算过程可以参考下图",{"2":{"36":1}}],["计算的主要代码如下",{"2":{"36":1}}],["计算对应的数组下标",{"2":{"20":1}}],["先获取到专辑分类",{"2":{"65":1}}],["先判断",{"2":{"39":1}}],["先进先出",{"2":{"24":1}}],["先通过自旋加锁",{"2":{"18":1}}],["先根据一级分类进行分组",{"2":{"68":1}}],["先根据",{"2":{"18":1}}],["🔓",{"2":{"18":1}}],["封装为",{"2":{"18":1}}],["则替换",{"2":{"39":1}}],["则无法进行扩容",{"2":{"37":1}}],["则会进行扩容",{"2":{"20":1}}],["则",{"2":{"20":1}}],["则通过自旋的方法去向该位置赋值",{"2":{"20":1}}],["则利用自旋锁的方式在",{"2":{"18":1}}],["则越散列",{"2":{"16":1}}],["为用户提供了更加便捷",{"2":{"59":1}}],["为用户提供了更多选择",{"2":{"59":1}}],["为",{"2":{"41":1}}],["为了避免进行扩容",{"2":{"34":1}}],["为了能够让实现者更容易地实现这个接口",{"2":{"27":1}}],["为链表结构",{"2":{"34":1}}],["为空则创建",{"2":{"39":1}}],["为空",{"2":{"18":1}}],["为什么这样做",{"2":{"36":1}}],["为什么要使用红黑树",{"0":{"14":1}}],["为什么",{"0":{"8":1}}],["流程",{"0":{"18":1,"20":1}}],["哪些在新数组的高位上",{"2":{"16":1}}],["t3",{"2":{"68":9}}],["t2",{"2":{"68":10}}],["t1",{"2":{"68":8}}],["type",{"2":{"65":1}}],["typescript",{"2":{"60":1}}],["ts",{"2":{"50":3}}],["tinyint",{"2":{"65":1}}],["tingshu",{"2":{"49":1,"64":1,"68":6}}],["timezone",{"2":{"69":1}}],["timedatectl",{"2":{"69":2}}],["timestamp",{"2":{"65":5}}],["time",{"2":{"65":4}}],["tip",{"2":{"46":1,"63":1,"69":1}}],["tt>",{"2":{"39":24}}],["task",{"2":{"60":1}}],["target",{"2":{"36":1,"37":1}}],["tab",{"2":{"35":6,"39":9,"40":4}}],["tablelogic",{"2":{"65":1}}],["tablefield",{"2":{"65":3}}],["tableid",{"2":{"65":1}}],["tablesizefor",{"2":{"36":1}}],["tables",{"2":{"36":1}}],["table",{"2":{"16":1,"17":1,"34":2,"35":1,"36":3,"37":5,"39":11,"40":1,"41":5,"42":1}}],["t",{"2":{"36":1,"39":1,"42":4}}],["two",{"2":{"36":2,"37":2}}],["tl",{"2":{"35":5}}],["threadpoolexecutor+completablefuture",{"2":{"60":1}}],["threshold\\t",{"2":{"34":1}}],["thresholds",{"2":{"34":1}}],["threshold",{"2":{"34":8,"35":1,"37":7,"39":3}}],["that",{"2":{"36":3,"39":2}}],["than",{"2":{"34":3}}],["this",{"2":{"34":1,"37":1,"39":4,"40":1}}],["there",{"2":{"36":1,"39":2}}],["the",{"2":{"24":2,"34":5,"36":6,"37":3,"39":21,"40":2}}],["tostring",{"2":{"69":1}}],["tolist",{"2":{"68":3}}],["too",{"2":{"34":1,"35":1}}],["to",{"2":{"33":1,"34":6,"36":4,"39":5,"42":1}}],["turn",{"2":{"33":1}}],["tradeoff",{"2":{"36":1}}],["transform",{"2":{"36":1}}],["true",{"2":{"25":1,"26":1,"27":1,"39":2}}],["treeification",{"2":{"34":1}}],["treeified",{"2":{"34":1}}],["treeifybin",{"0":{"35":1},"2":{"35":4,"39":1}}],["treeify",{"2":{"34":7,"35":3,"39":1}}],["trees",{"2":{"34":1,"36":1}}],["treeset",{"2":{"4":2}}],["treenode",{"2":{"33":5,"35":4,"37":2,"39":3,"40":3}}],["tree",{"2":{"33":2,"34":2}}],["treemap",{"2":{"5":2}}],["是",{"2":{"41":5}}],["是哈希表中指定位置桶里的链表节点",{"2":{"35":1}}],["是数组",{"0":{"33":1}}],["是基于哈希表的",{"2":{"31":1}}],["是一个操作",{"2":{"29":1}}],["是如何分离的",{"2":{"24":1}}],["是先算出来当前位置上哪些元素在新数组的低位上",{"2":{"16":1}}],["是每次转移一个元素",{"2":{"16":1}}],["是否相等",{"2":{"40":1,"42":1}}],["是否超过了最大容量",{"2":{"39":1}}],["是否为红黑树",{"2":{"39":1}}],["是否为",{"2":{"39":1}}],["是否为空或为",{"2":{"39":1}}],["是否为空",{"2":{"16":1}}],["是否大于阈值之外",{"2":{"16":1}}],["是无序且不可重复的",{"2":{"7":1}}],["重新计算桶里元素的新位置",{"2":{"37":1}}],["重新",{"2":{"16":1,"41":1}}],["毕竟",{"2":{"16":1}}],["生成的",{"2":{"16":1}}],["更改时区",{"2":{"69":1}}],["更为重要的是",{"2":{"26":1}}],["更散列则",{"2":{"16":1}}],["更复杂",{"2":{"16":1}}],["更高的效率",{"2":{"10":1}}],["算法就是简单的用",{"2":{"41":1}}],["算法",{"2":{"16":1}}],["算法使得元素更散列",{"2":{"16":1}}],["算法越复杂就越消耗",{"2":{"16":1}}],["算法越复杂",{"2":{"16":1}}],["算法比",{"2":{"16":1}}],["算法的集合框架",{"2":{"1":1}}],["反转",{"2":{"29":1}}],["反复地调用",{"2":{"26":1}}],["反正要去计算链表当前节点的个数",{"2":{"16":1}}],["反之亦然",{"2":{"11":3}}],["飙升",{"2":{"16":1}}],["credentials",{"2":{"69":1}}],["createtime",{"2":{"65":1}}],["create",{"2":{"65":2}}],["creation",{"2":{"39":1}}],["c3json",{"2":{"68":4}}],["c3",{"2":{"68":3}}],["c3collect",{"2":{"68":2}}],["c3list",{"2":{"68":3}}],["c2json",{"2":{"68":5}}],["c2",{"2":{"68":3}}],["c2collect",{"2":{"68":2}}],["c2map",{"2":{"68":2}}],["c2list",{"2":{"68":3}}],["c1json",{"2":{"68":5}}],["c1",{"2":{"68":3}}],["c1map",{"2":{"68":2}}],["c1list",{"2":{"68":2}}],["cloud",{"2":{"60":3}}],["class",{"2":{"24":2,"33":1,"69":1}}],["cd",{"2":{"50":1,"59":1}}],["cp",{"2":{"50":1}}],["cpu",{"2":{"16":2}}],["check",{"2":{"40":1}}],["cheapest",{"2":{"36":1}}],["change",{"2":{"39":1}}],["current",{"2":{"36":1,"42":1,"65":3}}],["customer>",{"2":{"24":2}}],["category",{"2":{"68":2}}],["categorychild",{"2":{"68":4}}],["categoryid",{"2":{"68":8}}],["categoryname",{"2":{"68":8}}],["category3",{"2":{"68":7}}],["category2",{"2":{"68":10}}],["category1",{"2":{"68":9}}],["calls",{"2":{"40":1}}],["calculations",{"2":{"36":1}}],["cap",{"2":{"36":3}}],["capacity",{"2":{"34":3,"35":1,"36":3,"37":9}}],["cannal",{"2":{"60":1}}],["can",{"2":{"33":1,"39":2}}],["case",{"2":{"35":1}}],["cas",{"2":{"21":1}}],["c",{"2":{"26":3,"27":2,"41":1}}],["circulararrayqueue",{"2":{"24":4}}],["c++的",{"2":{"23":1}}],["comment",{"2":{"65":2}}],["common",{"2":{"36":1}}],["component",{"2":{"69":1}}],["compose",{"2":{"46":4,"53":1,"54":1,"55":1,"56":1}}],["computes",{"2":{"36":1}}],["comparator",{"2":{"29":3}}],["compareandswapobject",{"2":{"21":1}}],["collectors",{"2":{"68":5}}],["collect",{"2":{"68":5}}],["collections",{"0":{"29":1},"2":{"29":3}}],["collection",{"0":{"8":1,"25":1},"2":{"7":1,"8":4,"11":8,"25":1,"26":1,"27":4,"29":5,"42":1}}],["collisions",{"2":{"36":1}}],["collide",{"2":{"36":1}}],["count",{"2":{"34":2}}],["copy",{"2":{"29":1,"50":1}}],["contenttype",{"2":{"69":1}}],["contained",{"2":{"39":2}}],["contains",{"2":{"24":2,"27":2}}],["const",{"2":{"58":3}}],["consecutive",{"2":{"36":1}}],["config",{"2":{"58":1}}],["conflicts",{"2":{"34":1}}],["conversion",{"2":{"34":1}}],["converted",{"2":{"34":1}}],["concurrentmodificationexception",{"2":{"42":3}}],["concurrenthashmap",{"0":{"17":1,"19":1,"21":1,"22":1},"1":{"18":1,"20":1},"2":{"17":2,"18":1,"20":3,"21":3}}],["concurrencylevel",{"2":{"21":1}}],["导致",{"2":{"16":1}}],["头插法速度更快",{"2":{"16":1}}],["与原来计算",{"2":{"37":1}}],["与实现",{"2":{"24":1}}],["与现代的数据结构类库的常见情况一样",{"2":{"24":1}}],["与",{"0":{"16":1},"2":{"23":1,"26":1,"27":1}}],["还需要考虑的一个问题就是",{"2":{"68":1}}],["还是",{"2":{"36":1,"41":2}}],["还提供了对集合对象设置不可变",{"2":{"29":1}}],["还会判断当前数组的长度",{"2":{"15":1}}],["还可以获得",{"2":{"7":1}}],["还可以获得所有的",{"2":{"7":1}}],["还可以调用",{"2":{"7":1}}],["之前没有调用",{"2":{"26":1}}],["之前调用",{"2":{"26":1}}],["之后不会出现更严重的冲突",{"2":{"37":1}}],["之后每个桶上的节点数必定小于等于原来桶上的节点数",{"2":{"37":1}}],["之后",{"2":{"15":1,"26":1,"41":1}}],["之间有什么区别",{"0":{"9":1}}],["什么时候将链表转化为红黑树",{"0":{"15":1}}],["80",{"2":{"58":2}}],["87",{"2":{"51":1}}],["8151",{"2":{"44":1}}],["832",{"2":{"44":1}}],["8",{"0":{"32":1,"35":1,"40":1,"41":1,"43":1},"1":{"33":1,"34":1,"35":1,"44":1,"45":1},"2":{"14":1,"15":2,"26":1,"31":2,"34":2,"35":1,"36":1,"39":4,"41":2,"44":2,"45":2}}],["深入java集合系列之",{"0":{"30":1},"1":{"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1}}],["深入",{"2":{"12":1,"13":1}}],["外语学习材料等",{"2":{"59":1}}],["外",{"2":{"11":1}}],["时间一致",{"2":{"69":1}}],["时间",{"2":{"44":4,"45":4}}],["时反复地调用",{"2":{"26":1}}],["时如果发现当前",{"2":{"20":1}}],["时才会将链表转为红黑树",{"2":{"15":1}}],["时",{"2":{"11":1,"14":1,"15":1,"20":1,"26":1}}],["受",{"2":{"11":1}}],["除非实在没有必要",{"2":{"65":1}}],["除非通过迭代器本身的",{"2":{"42":1}}],["除开判断",{"2":{"16":1}}],["除迭代器自身的移除操作以外",{"2":{"11":3}}],["除了通过迭代器逐一遍历各个元素",{"2":{"7":1}}],["被修改了",{"2":{"11":3}}],["若",{"2":{"11":3}}],["此类不保证映射的顺序",{"2":{"31":1}}],["此实现提供所有可选的映射操作",{"2":{"31":1}}],["此过程和",{"2":{"18":1}}],["此时不会转化为红黑树",{"2":{"15":1}}],["此",{"2":{"11":4}}],["视图方法",{"2":{"42":1}}],["视图",{"2":{"11":2}}],["返回指定集合中指定元素的出现次数",{"2":{"29":1}}],["返回给定集合中最大元素",{"2":{"29":1}}],["返回一个",{"2":{"11":2}}],["返回",{"2":{"11":1,"26":1}}],["返回值为",{"2":{"7":1}}],["就需要考虑后端的返回数据的格式了",{"2":{"68":1}}],["就好了",{"2":{"41":1}}],["就调用红黑树节点的",{"2":{"40":1}}],["就要对",{"2":{"37":1}}],["就去新建",{"2":{"35":1}}],["就使用红黑树来替换链表",{"2":{"35":1}}],["就会发生这样的变化",{"2":{"41":1}}],["就会判断",{"2":{"40":1}}],["就会调整为",{"2":{"36":2}}],["就会把树形的桶元素还原",{"2":{"34":1}}],["就会自动地",{"2":{"26":1}}],["就相当于一个单链表",{"2":{"31":1}}],["就请求一个迭代器",{"2":{"26":1}}],["就直接使用",{"2":{"24":1}}],["就可以读取集合中所有元素",{"2":{"26":1}}],["就可以使用",{"2":{"24":1}}],["就可以指定当前对象在集合中的存放位置",{"2":{"7":1}}],["就是",{"2":{"36":1}}],["就是这样一个实用方法",{"2":{"27":1}}],["就是一个小型的",{"2":{"21":1}}],["就是用来表示某一个段的",{"2":{"21":1}}],["就先利用扩容来缩小链表的长度",{"2":{"15":1}}],["就不必进行装箱和拆箱操作了",{"2":{"10":1}}],["引入泛型后",{"2":{"10":1}}],["操作的使用仍然和",{"2":{"22":1}}],["操作中的",{"2":{"21":1}}],["操作",{"0":{"44":1,"45":1},"2":{"10":1,"21":1,"22":1}}],["拆箱",{"2":{"10":1}}],["装箱",{"2":{"10":1}}],["并返回",{"2":{"39":1}}],["并返回刚刚越过的那个元素的引用",{"2":{"26":1}}],["并对",{"2":{"39":1}}],["并放进去",{"2":{"37":1}}],["并允许使用",{"2":{"31":1}}],["并在",{"2":{"26":1}}],["并按照",{"2":{"24":1}}],["并解释一些颇具争议的特性背后的考虑",{"2":{"23":1}}],["并发安全的扩区数组某个位置元素",{"2":{"21":1}}],["并发安全的给数组某个位置赋值",{"2":{"21":1}}],["并且使用",{"2":{"46":1}}],["并且可以查找队列中元素的个数",{"2":{"24":1}}],["并且元素个数加",{"2":{"20":1}}],["并且数组的长度大于等于",{"2":{"15":1}}],["并且减少了出错机会",{"2":{"10":1}}],["并不是键值对映射",{"2":{"8":1}}],["并不是把这个对象本身存储进了集合",{"2":{"7":1}}],["这一策略在源码中的实现是通过",{"2":{"42":1}}],["这一块就是",{"2":{"41":1}}],["这就是所谓的",{"2":{"42":1}}],["这就是",{"2":{"37":1}}],["这是不对的",{"2":{"37":1}}],["这是一个常用的操作",{"2":{"37":1}}],["这是",{"2":{"36":1}}],["这样的多样性使得用户能够根据个人兴趣和需求选择内容",{"2":{"59":1}}],["这样的值跟",{"2":{"36":1}}],["这样就很容易造成冲突了",{"2":{"36":1}}],["这样可以减少系统损失",{"2":{"36":1}}],["这样",{"2":{"27":1,"68":1}}],["这里我们就可以使用视图",{"2":{"68":1}}],["这里的准备工作对后面所有模块都是通用的",{"2":{"63":1}}],["这里的相同指的是",{"2":{"39":1}}],["这里不做赘述",{"2":{"46":1}}],["这里假设负载因子",{"2":{"41":1}}],["这里了",{"2":{"41":1}}],["这里有一个需要注意的地方",{"2":{"37":1}}],["这里还有一个有用的推论",{"2":{"26":1}}],["这里只是以这些类作为示例",{"2":{"24":1}}],["这些实用方法中的某些方法非常有用",{"2":{"27":1}}],["这些类是为类库设计者而设计的",{"2":{"24":1}}],["这些假设就只能在程序员编码时候去考虑了",{"2":{"10":1}}],["这种创建集合对象的做法也是我们在实际开发中通常所用的方法",{"2":{"24":1}}],["这个value也是一个map类型",{"2":{"68":1}}],["这个设计确实非常巧妙",{"2":{"41":1}}],["这个位置",{"2":{"37":1}}],["这个方法的作用看起来不是很直观",{"2":{"36":1}}],["这个方法的意思是",{"2":{"20":1}}],["这个替换的方法叫",{"2":{"35":1}}],["这个值不能小于",{"2":{"34":1}}],["这个时候",{"2":{"31":1}}],["这个桶下由一条长长的链表",{"2":{"31":1}}],["这个字节",{"2":{"26":1}}],["这个接口包含三个抽象方法",{"2":{"26":1}}],["这个接口有两个基本方法",{"2":{"25":1}}],["这个接口并没有说明队列是如何实现的",{"2":{"24":1}}],["这个对象时",{"2":{"24":1}}],["这个对象就被插入进集合中一次",{"2":{"7":1}}],["这个类实现了",{"2":{"24":1}}],["这个",{"2":{"11":2,"36":1}}],["这两个过程都是具有很大开销的",{"2":{"10":1}}],["这使得代码更加可读",{"2":{"10":1}}],["获取base",{"2":{"68":1}}],["获取自己的appid和appsecret",{"2":{"58":1}}],["获取返回的图片访问地址",{"2":{"52":1}}],["获取前面或后面元素的索引位置",{"2":{"9":1}}],["获得相应的",{"2":{"7":1}}],["从mysql中获取到的数据类型是list",{"2":{"68":1}}],["从第一个开始",{"2":{"35":1}}],["从而解决了这个问题",{"2":{"36":1}}],["从而提高速度",{"2":{"35":1}}],["从而可以解决多线程并发访问集合时的线程安全问题",{"2":{"29":1}}],["从数据流中读取一个字节",{"2":{"26":1}}],["从此",{"2":{"11":3}}],["从",{"2":{"9":1}}],["来优化这个问题",{"2":{"31":1}}],["来遍历",{"2":{"9":1}}],["来明确说明取第几个",{"2":{"7":1}}],["id来存储二级",{"2":{"68":1}}],["id",{"2":{"65":1,"68":23}}],["idtype",{"2":{"65":1}}],["impact",{"2":{"36":2}}],["implements",{"2":{"24":2,"39":1,"40":1}}],["implementation",{"2":{"24":1}}],["isdeleted",{"2":{"65":1}}],["is",{"2":{"34":1,"35":1,"36":1,"39":5,"65":2}}],["isempty",{"2":{"24":2}}],["if",{"2":{"27":1,"34":1,"35":4,"37":15,"39":19,"40":6,"42":1,"69":1}}],["it",{"2":{"26":3,"50":1}}],["iterable",{"2":{"26":2}}],["iterator",{"0":{"9":1},"2":{"9":3,"24":4,"25":3,"26":5,"27":2}}],["iter",{"2":{"26":3}}],["illegalstateexception",{"2":{"26":1}}],["i",{"2":{"16":1,"18":1,"20":1,"29":1,"39":14}}],["init",{"2":{"69":1}}],["initial",{"2":{"37":6}}],["initializes",{"2":{"37":1}}],["inner",{"2":{"68":4}}],["increment",{"2":{"65":1}}],["incorporate",{"2":{"36":1}}],["indicate",{"2":{"39":2}}],["index++",{"2":{"42":1}}],["indexfor",{"2":{"39":1}}],["index",{"2":{"7":2,"35":4,"36":1,"37":1,"39":1,"41":1,"42":2}}],["install",{"2":{"69":1}}],["instanceof",{"2":{"37":1,"39":1,"40":1}}],["instead",{"2":{"35":1}}],["inputstream",{"2":{"26":1}}],["in",{"2":{"24":1,"33":1,"34":2,"35":2,"36":5,"37":4,"39":3}}],["integer",{"2":{"37":2,"65":1}}],["interface",{"2":{"24":3}}],["int",{"2":{"7":1,"24":3,"29":3,"34":3,"35":2,"36":5,"37":6,"39":5,"40":3}}],["的权限未开放",{"2":{"52":1}}],["的性能",{"0":{"43":1},"1":{"44":1,"45":1}}],["的话索引变成",{"2":{"41":1}}],["的话索引没变",{"2":{"41":1}}],["的话把链表转换成红黑树",{"2":{"39":1}}],["的时候",{"2":{"41":1}}],["的时候指定了初始大小",{"2":{"36":1}}],["的长度",{"2":{"41":1}}],["的过程",{"2":{"41":2}}],["的实现那样重新计算",{"2":{"41":1}}],["的实现是",{"2":{"31":1}}],["的实际大小时进行扩容",{"2":{"41":1}}],["的查找方法是",{"2":{"40":1}}],["的查询性能更好",{"2":{"16":1}}],["的首个元素是否和",{"2":{"39":1}}],["的结果相比",{"2":{"37":1}}],["的幂次方的数",{"2":{"36":1}}],["的幂次方",{"2":{"36":2}}],["的大小只能是",{"2":{"36":1}}],["的哈希值后",{"2":{"40":1}}],["的哈希值",{"2":{"36":1}}],["的数组进行扩容",{"2":{"37":1}}],["的数组下标",{"2":{"18":1}}],["的数据结构",{"0":{"32":1},"1":{"33":1,"34":1,"35":1}}],["的缺点",{"0":{"31":1}}],["的类",{"2":{"24":1}}],["的规则检索对象时就应该使用队列",{"2":{"24":1}}],["的问世",{"2":{"23":1}}],["的内部类",{"2":{"21":1}}],["的并发量",{"2":{"21":1}}],["的方式修改对象的属性",{"2":{"21":1}}],["的元素个数加",{"2":{"20":1}}],["的",{"0":{"38":1,"39":1},"1":{"39":1,"40":1,"41":1},"2":{"16":1,"18":3,"21":3,"36":2,"39":1,"41":3,"60":2}}],["的不同点",{"0":{"16":1}}],["的变化会在",{"2":{"11":2}}],["的变化会在集合中反应出来",{"2":{"11":1}}],["的一个",{"2":{"11":2}}],["的一组数据呢",{"2":{"8":1}}],["的键值对映射数据还是用",{"2":{"8":1}}],["的集合",{"2":{"7":2}}],["其对应的所有二级分类信息作为value",{"2":{"68":1}}],["其它任何时间任何方式的修改",{"2":{"42":1}}],["其中",{"2":{"36":1,"41":1}}],["其中的哈希桶数组的",{"2":{"41":1}}],["其中的",{"2":{"23":1}}],["其次",{"2":{"8":1,"64":1}}],["其实",{"2":{"3":1,"7":1}}],["提神音乐",{"2":{"68":1}}],["提交",{"2":{"60":1}}],["提高效率",{"2":{"60":1}}],["提供学术教材",{"2":{"59":1}}],["提供的是一组数据",{"2":{"8":1}}],["提供的是键值对映射",{"2":{"8":1}}],["提出了攘括所有集合接口和实现类",{"2":{"1":1}}],["首先我们将application",{"2":{"64":1}}],["首先下载",{"2":{"50":1}}],["首先需要具备",{"2":{"46":1}}],["首先根据",{"2":{"20":1}}],["首先",{"2":{"8":1,"24":1}}],["组合成的",{"2":{"7":1}}],["所有分类都只会出现一次",{"2":{"68":1}}],["所有模块的配置内容参见",{"2":{"64":1}}],["所有的实现类都必须提供这些方法",{"2":{"27":1}}],["所在服务器",{"2":{"50":1}}],["所在的桶的头节点",{"2":{"40":1}}],["所返回的迭代器都是快速失败的",{"2":{"42":1}}],["所具有的优点",{"2":{"23":1}}],["所对应的",{"2":{"7":1}}],["所以使用的是折半查找",{"2":{"40":1}}],["所以节点要么就在原来的位置",{"2":{"37":1}}],["所以为了提高查询的效率",{"2":{"37":1}}],["所以这里把高低位都利用起来",{"2":{"36":1}}],["所以这个方法很重要",{"2":{"20":1}}],["所以可以简化一下",{"2":{"16":1}}],["所以只能优化",{"2":{"16":1}}],["所以运行效率相对较高",{"2":{"10":1}}],["所以",{"2":{"7":1,"21":1,"41":1}}],["取出其中的三级分类",{"2":{"68":1}}],["取则可以根据",{"2":{"7":1}}],["取元素时",{"2":{"7":1}}],["用户可以通过手机等设备在任何时间",{"2":{"59":1}}],["用同样的方式",{"2":{"26":1}}],["用于数据增量同步",{"2":{"60":1}}],["用于拉取代码",{"2":{"60":1}}],["用于返回一个实现了",{"2":{"25":1}}],["用于向集合中添加元素",{"2":{"25":1}}],["用",{"2":{"7":1,"26":1}}],["xxl",{"2":{"60":1}}],["xor",{"2":{"36":1}}],["xors",{"2":{"36":1}}],["x26",{"2":{"35":1,"36":1,"37":6,"39":11,"40":13,"42":4}}],["x3c",{"2":{"24":9,"26":2,"27":2,"33":6,"35":9,"36":1,"37":17,"39":29,"40":5,"42":2,"68":11}}],["x",{"2":{"7":1}}],["即当键值对的实际大小",{"2":{"41":1}}],["即可在浏览器输入地址访问图片",{"2":{"52":1}}],["即可",{"2":{"39":1,"49":1}}],["即保证了",{"2":{"37":1}}],["即使你在创建",{"2":{"36":1}}],["即使哈希函数取得再好",{"2":{"31":1}}],["即树形化",{"2":{"35":1}}],["即",{"2":{"7":1,"23":1,"39":1}}],["即相当于集合中有多个索引指向了这个对象",{"2":{"7":1}}],["即调用",{"2":{"7":1}}],["当我们需要获取分类数据的时候",{"2":{"68":1}}],["当我们多次调用",{"2":{"7":1}}],["当实现文件上传接口后",{"2":{"52":1}}],["当你运行",{"2":{"46":1}}],["当哈希值的高位变化很大",{"2":{"36":1}}],["当哈希表中的容量大于这个值时",{"2":{"34":1}}],["当扩容时",{"2":{"34":1}}],["当桶中元素个数超过这个值时",{"2":{"34":1}}],["当",{"2":{"31":1,"37":1}}],["当然",{"2":{"27":1}}],["当在程序中使用队列时",{"2":{"24":1}}],["当需要收集对象",{"2":{"24":1}}],["当向",{"2":{"20":1}}],["当调用到",{"2":{"21":1}}],["当调用",{"2":{"18":1,"21":1,"26":1}}],["当发现链表中的元素个数大于",{"2":{"15":1}}],["当元素个数小于阈值",{"2":{"14":1}}],["当一个迭代器正在遍历此",{"2":{"11":1}}],["当一个迭代器正在遍历一个此",{"2":{"11":2}}],["当这个对象被",{"2":{"7":1}}],["中新增的操作",{"0":{"35":1,"40":1}}],["中关于红黑树的三个关键参数",{"0":{"34":1}}],["中引入了红黑树",{"2":{"31":1}}],["中有大量的元素都存放到同一个桶中时",{"2":{"31":1}}],["中有可能会重新对",{"2":{"16":1}}],["中元素的顺序",{"2":{"29":1}}],["中提供了一系列静态的方法对集合元素进行排序",{"2":{"29":1}}],["中数组的每一个位置都有一把锁",{"2":{"22":1}}],["中段数是可控制的",{"2":{"22":1}}],["中其实仍然有分段锁的思想",{"2":{"22":1}}],["中类似",{"2":{"22":1}}],["中还多了一个",{"2":{"16":1}}],["中还判断了",{"2":{"16":1}}],["中则没有该条件了",{"2":{"16":1}}],["中不一样",{"2":{"16":1}}],["中扩容的条件和",{"2":{"16":1}}],["中没有这部分逻辑",{"2":{"16":1}}],["中没有红黑树",{"2":{"16":1}}],["中增加了红黑树",{"2":{"16":1}}],["中链表的插入使用的是头插法",{"2":{"16":1}}],["中使用来红黑树",{"2":{"16":1}}],["中的元素越来越多的时候",{"2":{"37":1}}],["中的元素则更散列",{"2":{"16":1}}],["中的",{"0":{"14":1,"15":1,"16":1},"2":{"42":1}}],["中反应出来",{"2":{"11":2}}],["中移除对应的映射",{"2":{"11":3}}],["中删除元素会从",{"2":{"11":3}}],["中包含的所有映射的一个",{"2":{"11":1}}],["中包含的所有",{"2":{"11":2}}],["中",{"0":{"32":1},"1":{"33":1,"34":1,"35":1},"2":{"7":1,"16":1,"20":1,"21":1,"35":1,"37":1}}],["中存储的数据是无序",{"2":{"6":1}}],["每一个实现都可以通过一个实现了",{"2":{"24":1}}],["每个",{"2":{"21":1}}],["每调用一次",{"2":{"7":1}}],["每次加入的对象就像火车站买票有排队顺序一样",{"2":{"7":1}}],["每种编程语言中都有集合",{"2":{"1":1}}],["ez",{"2":{"50":2}}],["evict",{"2":{"39":3}}],["each",{"2":{"37":1}}],["elasticsearch+kibana+logstash",{"2":{"60":1}}],["elasticsearch",{"0":{"57":1}}],["else",{"2":{"35":2,"37":8,"39":3}}],["elements",{"2":{"37":1}}],["element",{"2":{"24":1,"26":4,"27":2,"34":1}}],["either",{"2":{"33":1,"37":1}}],["exit",{"2":{"50":1}}],["existing",{"2":{"39":2}}],["exec",{"2":{"50":1}}],["exchange",{"2":{"50":3}}],["export",{"2":{"58":3}}],["expectedmodcount",{"2":{"42":3}}],["expansion",{"2":{"37":1}}],["expresslane",{"2":{"24":3}}],["examples",{"2":{"36":1}}],["extension",{"2":{"33":1}}],["extends",{"2":{"33":3}}],["equals",{"2":{"27":1,"39":6,"40":2}}],["error",{"2":{"26":1}}],["e>",{"2":{"24":7,"27":2}}],["endpoint",{"2":{"69":1}}],["enable",{"2":{"50":1,"69":1}}],["enumeration",{"2":{"23":2}}],["entryset",{"2":{"7":1,"11":1,"68":2}}],["entry",{"2":{"7":1,"11":1,"33":3,"39":3,"42":1}}],["e",{"2":{"7":2,"24":2,"27":1,"35":7,"37":16,"39":20,"40":7}}],["autowired",{"2":{"68":2,"69":1}}],["auto",{"2":{"65":2}}],["axios",{"2":{"60":1}}],["adapter",{"2":{"60":1}}],["advance",{"2":{"42":1}}],["addentry",{"2":{"39":1}}],["adding",{"2":{"34":1}}],["addcount",{"2":{"20":1}}],["addall",{"2":{"11":3}}],["add",{"2":{"7":4,"11":3,"24":1,"25":2}}],["afternodeinsertion",{"2":{"39":1}}],["afternodeaccess",{"2":{"39":1}}],["accord",{"2":{"37":1}}],["amp",{"2":{"37":1,"40":1}}],["among",{"2":{"36":1}}],["appendonly",{"2":{"51":1}}],["apply",{"2":{"36":1}}],["api",{"2":{"16":1,"24":1,"42":1,"58":1,"60":1}}],["album和service",{"2":{"64":1}}],["album",{"2":{"64":1,"68":6}}],["also",{"2":{"39":2}}],["already",{"2":{"36":1}}],["always",{"2":{"36":1,"40":1}}],["allocates",{"2":{"37":1}}],["all",{"2":{"35":1}}],["avoid",{"2":{"34":1}}],["above",{"2":{"36":1}}],["about",{"2":{"34":1}}],["abstractcollection",{"2":{"27":1}}],["abstractqueue",{"2":{"24":2}}],["abstract",{"2":{"24":1}}],["attribute",{"2":{"68":3}}],["at",{"2":{"34":4,"35":1,"37":1}}],["anacos目录下",{"2":{"64":1}}],["and",{"2":{"34":3,"36":3,"39":1,"40":1}}],["an",{"2":{"34":1}}],["arch",{"2":{"47":1}}],["are",{"2":{"34":1,"36":2,"37":1}}],["arraydeque",{"2":{"24":1}}],["arraylist",{"2":{"3":4,"37":1}}],["arrays",{"2":{"1":1}}],["asia",{"2":{"69":1}}],["associated",{"2":{"39":8}}],["associates",{"2":{"39":2}}],["assumptions",{"2":{"34":1}}],["as",{"2":{"33":1,"36":2,"68":14}}],["a",{"2":{"24":1,"34":6,"36":3,"37":1,"39":4,"41":2}}],["按先来后到的顺序排序",{"2":{"7":1}}],["按价格之类的排序",{"2":{"7":1}}],["按大小",{"2":{"7":1}}],["只需要向视图表中执行一条普通的查询",{"2":{"68":1}}],["只需要看看原来的",{"2":{"41":1}}],["只是多了一个",{"2":{"37":1}}],["只有三级分类是唯一的",{"2":{"68":1}}],["只有当分类表发生变化才会执行这段复杂sql",{"2":{"68":1}}],["只有当链表中的元素个数大于",{"2":{"15":1}}],["只有在构建集合对象时",{"2":{"24":1}}],["只不过",{"2":{"22":1}}],["只可以向前遍历",{"2":{"9":1}}],["只能遍历",{"2":{"9":1}}],["只能通过",{"2":{"7":1}}],["只会存在一个",{"2":{"5":1}}],["叫",{"2":{"7":1}}],["各有什么特点",{"0":{"7":1}}],["存在非同步的并发修改时",{"2":{"42":1}}],["存在对应",{"2":{"39":1}}],["存在",{"2":{"39":1}}],["存取元素时",{"0":{"7":1}}],["存储的数据是有序且可以重复的",{"2":{"6":1}}],["存储的是",{"2":{"6":1}}],["存储的是单列数据的集合",{"2":{"6":1}}],["值的时间",{"2":{"41":1}}],["值新增的那个",{"2":{"41":1}}],["值得到插入的数组索引",{"2":{"39":1}}],["值是否相同",{"2":{"39":1}}],["值是通过下面这段源码算出来的",{"2":{"36":1}}],["值计算插入位置",{"2":{"39":1}}],["值",{"2":{"39":1}}],["值和",{"2":{"31":1}}],["值可以重复",{"2":{"6":1}}],["值不会重复",{"2":{"6":1}}],["且",{"2":{"6":1}}],["不均匀的时候",{"2":{"44":1,"45":1}}],["不可能做出任何坚决的保证",{"2":{"42":1}}],["不是线程安全的",{"2":{"42":1}}],["不是那种按年龄",{"2":{"7":1}}],["不需要像",{"2":{"41":1}}],["不需要过多的解释",{"2":{"27":1}}],["不想等就从子树中递归查找",{"2":{"40":1}}],["不为空",{"2":{"39":1}}],["不为空的时候才会进行扩容",{"2":{"16":1}}],["不能直接地调用",{"2":{"26":1}}],["不能存储重复的",{"2":{"7":1}}],["不能通过索引访问元素",{"2":{"7":1}}],["不同",{"2":{"7":1}}],["不同之处",{"2":{"4":1}}],["不用的子类也可以保证有序",{"2":{"6":1}}],["view视图中所有数据",{"2":{"68":1}}],["view",{"2":{"68":2}}],["vue3",{"2":{"60":1}}],["vs",{"0":{"41":1,"43":1},"1":{"44":1,"45":1}}],["v",{"2":{"39":8}}],["vary",{"2":{"36":1}}],["value是其对应的所有三级分类信息",{"2":{"68":1}}],["values",{"2":{"7":1,"11":1}}],["value",{"2":{"6":2,"7":5,"11":1,"16":1,"18":2,"20":1,"21":1,"34":1,"35":1,"37":2,"39":35,"68":1}}],["v>",{"2":{"33":6,"35":7,"37":9,"39":5,"40":5,"42":1}}],["void",{"2":{"24":1,"29":1,"35":1,"69":1}}],["vector",{"2":{"1":1,"3":2,"23":1}}],["在二级",{"2":{"68":1}}],["在生产环境中用于快速搭建环境",{"2":{"60":1}}],["在过去",{"2":{"59":1}}],["在安全中打开服务端口",{"2":{"58":1}}],["在容器内",{"2":{"50":1}}],["在这里将其封装成一个工具类",{"2":{"69":1}}],["在这里统一使用",{"2":{"46":1}}],["在这些方法中",{"2":{"27":1}}],["在迭代器创建之后",{"2":{"42":1}}],["在迭代过程中",{"2":{"42":1}}],["在红黑树中执行插入操作",{"2":{"39":1}}],["在进行扩容时",{"2":{"37":1}}],["在创建的时候也会调用下面这个方法来调整大小",{"2":{"36":1}}],["在决定删除某个元素之前应该先看一下这个元素是很具有实际意义的",{"2":{"26":1}}],["在大多数情况下",{"2":{"26":1}}],["在",{"0":{"35":1,"40":1},"2":{"25":1,"26":1,"35":1,"36":1,"41":1,"42":1}}],["在研究",{"2":{"24":1}}],["在调用构造器",{"2":{"24":1}}],["在队列的头部删除元素",{"2":{"24":1}}],["在加锁过程中逻辑比较复杂",{"2":{"18":1}}],["在非泛型编程中",{"2":{"10":1}}],["在数据存储方面",{"2":{"6":1}}],["在数据结构方面",{"2":{"6":1}}],["在保证线程安全的情况下使用泛型和并发集合类",{"2":{"1":1}}],["区别",{"0":{"6":1}}],["也需要将相关的地址配置等信息修改为自己本机配置",{"2":{"64":1}}],["也促进了作家和内容创作者的创作和传播",{"2":{"59":1}}],["也正是因为这样巧妙的",{"2":{"37":1}}],["也正是因为与的这个操作",{"2":{"36":1}}],["也很难达到元素百分百均与分布",{"2":{"31":1}}],["也许不太可能",{"2":{"24":1}}],["也就等价于",{"2":{"24":1}}],["也就是在调用构造器的地方",{"2":{"24":1}}],["也就是哈希表",{"2":{"5":1}}],["也可以获得所有的",{"2":{"7":1}}],["也可以插队",{"2":{"7":1}}],["也是",{"2":{"3":1}}],["顺序性是体现和",{"2":{"4":1}}],["它提供了putobject方法进行文件上传",{"2":{"69":1}}],["它的两个构造器分别是private和protected的",{"2":{"69":1}}],["它的key是二级分类id",{"2":{"68":1}}],["它的实际作用就是把",{"2":{"36":1}}],["它通过计算指定",{"2":{"40":1}}],["它将基础方法",{"2":{"27":1}}],["它不支持",{"2":{"11":3}}],["它是双列的集合",{"2":{"7":1}}],["它们有一个共同的父接口",{"2":{"7":1}}],["它们都是单列元素的集合",{"2":{"7":1}}],["它们的",{"2":{"5":1}}],["它们的特点是元素都不可重复",{"2":{"4":1}}],["它在多线程访问时是线程安全的",{"2":{"3":1}}],["而我们返回给前端的数据中",{"2":{"68":1}}],["而这毕竟算是一个多表连接的复杂查询",{"2":{"68":1}}],["而这个",{"2":{"40":1}}],["而三张表的数据都需要",{"2":{"68":1}}],["而不冒在将来不确定的时间发生任意不确定行为的风险",{"2":{"42":1}}],["而不是树形化",{"2":{"34":1}}],["而不希望像",{"2":{"23":1}}],["而在",{"2":{"16":1,"37":1}}],["而是进行扩容",{"2":{"15":1}}],["而是在集合中用一个索引变量指向这个对象",{"2":{"7":1}}],["而且",{"2":{"8":1}}],["而",{"2":{"4":1,"6":2,"8":1,"9":2,"16":4,"21":1,"22":1}}],["而非实现我们自己的集合类",{"2":{"1":1}}],["sneakythrows",{"2":{"69":2}}],["sdk参考官网",{"2":{"69":1}}],["sql",{"2":{"49":1}}],["suppresswarnings",{"2":{"37":1}}],["same",{"2":{"37":1}}],["systemctl",{"2":{"69":2}}],["systematic",{"2":{"36":1}}],["synchronizedxxx",{"2":{"29":1}}],["synchronized",{"2":{"3":1,"20":1,"22":2}}],["springcloud",{"2":{"60":1}}],["spring",{"2":{"60":5}}],["springboot",{"2":{"60":1}}],["spreading",{"2":{"36":2}}],["spreads",{"2":{"36":2}}],["specified",{"2":{"39":8}}],["speed",{"2":{"36":1}}],["split",{"2":{"34":1,"37":1}}],["small",{"2":{"35":1,"36":1}}],["smallest",{"2":{"34":1}}],["shanghai",{"2":{"69":1}}],["shardingsphere",{"2":{"60":1}}],["shell",{"2":{"69":1}}],["shifted",{"2":{"36":1}}],["shrinkage",{"2":{"34":2}}],["should",{"2":{"34":3}}],["shuffle",{"2":{"29":1}}],["src",{"2":{"29":1}}],["swap",{"2":{"29":1}}],["some",{"2":{"36":1}}],["something",{"2":{"26":2}}],["so",{"2":{"33":1,"36":2}}],["sort",{"2":{"29":2}}],["signifies",{"2":{"37":1}}],["simplified",{"2":{"24":1}}],["size",{"2":{"16":1,"24":3,"27":1,"36":1,"37":1,"39":1,"41":3,"42":1}}],["stream",{"2":{"68":5,"69":1}}],["string",{"2":{"26":2,"69":3}}],["string>",{"2":{"26":2}}],["start",{"2":{"69":1}}],["stay",{"2":{"37":1}}],["static",{"2":{"27":1,"29":1,"33":1,"34":3,"36":1}}],["standard",{"2":{"24":1}}],["stack",{"2":{"1":1,"23":1}}],["stl",{"2":{"23":2}}],["selectlist",{"2":{"68":1}}],["select",{"2":{"68":1}}],["seata",{"2":{"60":1}}],["sentinel",{"0":{"55":1}}],["se",{"2":{"26":1}}],["segment",{"2":{"17":2,"18":6,"21":6}}],["segments",{"2":{"17":1}}],["sets",{"2":{"36":4}}],["setvalue",{"2":{"11":1}}],["set",{"0":{"4":1,"7":1},"2":{"4":1,"7":4,"9":1,"11":12,"29":1,"60":1,"69":2}}],["但随着数字化媒体的发展",{"2":{"59":1}}],["但却又希望能够得到",{"2":{"23":1}}],["但是在此提供了例行方法",{"2":{"27":1}}],["但是在多线程扩容的情况下使用头插法会出现循环链表的问题",{"2":{"16":1}}],["但是",{"2":{"26":1}}],["但是这个操作也是需要并发安全的",{"2":{"20":1}}],["但是该类中大多数方法都加了",{"2":{"3":1}}],["但当元素个数大于此阈值时",{"2":{"14":1}}],["但如果将元素插入到集合的尾部",{"2":{"3":1}}],["快速失败迭代器尽最大的努力抛出",{"2":{"42":1}}],["快",{"2":{"3":1}}],["远比",{"2":{"3":1}}],["可以实现的方法多种多样",{"2":{"68":1}}],["可以认为是随机的",{"2":{"41":1}}],["可以编写操作任何集合类型的实用方法",{"2":{"27":1}}],["可以将",{"2":{"26":1}}],["可以逐个访问集合中的每个元素",{"2":{"26":1}}],["可以使用这个迭代器对象依次访问集合中的元素",{"2":{"25":1}}],["可以双向遍历",{"2":{"9":1}}],["可以根据索引位置对集合进行快速的随机访问",{"2":{"3":1}}],["可以降低代码维护成本",{"2":{"1":1}}],["详情参考",{"2":{"1":1,"12":1,"13":1,"46":1}}],["join",{"2":{"68":4}}],["job",{"2":{"60":1}}],["jsonobject",{"2":{"68":6}}],["jsonobject>",{"2":{"68":4}}],["json",{"2":{"68":1}}],["jsonignore",{"2":{"65":2}}],["js中的后端接口配置",{"2":{"58":1}}],["jar",{"2":{"60":1}}],["javalist",{"2":{"68":1}}],["javahashiterator",{"2":{"42":1}}],["javamap",{"2":{"41":1}}],["javascript",{"2":{"58":1}}],["javastatic",{"2":{"36":1}}],["javase1",{"2":{"23":1}}],["java8",{"2":{"35":1}}],["javait",{"2":{"26":2}}],["javafor",{"2":{"26":1}}],["javacollection",{"2":{"26":1}}],["javaqueue",{"2":{"24":1}}],["javapublic",{"2":{"24":3,"27":1}}],["java2",{"2":{"1":1}}],["java",{"0":{"1":1,"23":1},"1":{"24":1,"25":1,"26":1,"27":1,"28":1,"29":1},"2":{"1":3,"12":1,"13":1,"23":2,"24":2,"25":1,"26":2,"27":2,"33":1,"34":1,"35":1,"36":3,"37":1,"39":2,"40":2,"42":1,"60":1,"65":1,"68":2,"69":2}}],["jdbc",{"2":{"60":1}}],["jdk1",{"0":{"32":1,"35":1,"40":1,"41":2,"43":2},"1":{"33":1,"34":1,"35":1,"44":2,"45":2},"2":{"31":2,"39":1,"41":3,"44":4,"45":4}}],["jdk8jdk7",{"2":{"39":1}}],["jdk8",{"0":{"13":1,"14":1,"15":1,"16":1,"19":1,"22":1},"1":{"20":1},"2":{"16":11,"22":2}}],["jdk7",{"0":{"12":1,"16":1,"17":1,"21":1},"1":{"18":1},"2":{"16":8,"17":1,"18":1,"22":2}}],["jdk",{"2":{"1":1}}],["just",{"2":{"36":1}}],["j",{"2":{"18":3,"29":1,"37":7}}],["和插入时一样的是",{"2":{"40":1}}],["和",{"0":{"6":1,"9":1},"2":{"1":1,"3":2,"5":1,"7":3,"9":1,"10":1,"11":3,"16":1,"24":1,"25":1,"27":1,"29":1,"41":2,"46":1,"60":1}}],["版本包含的集合类有",{"2":{"1":1}}],["说出集合框架的一些优点",{"0":{"1":1}}],["集合中的",{"2":{"29":1}}],["集合元素按升序排序",{"2":{"29":1}}],["集合元素进行随机排序",{"2":{"29":1}}],["集合类库中",{"2":{"26":1}}],["集合类库也将接口",{"2":{"24":1}}],["集合类的基本接口是",{"2":{"25":1}}],["集合系列之",{"2":{"12":1,"13":1}}],["集合受",{"2":{"11":1}}],["集合视图",{"2":{"11":1}}],["集合支持元素查找和删除",{"2":{"11":3}}],["集合时",{"2":{"11":2}}],["集合是受",{"2":{"11":1}}],["集合",{"2":{"9":1}}],["集合接口的常见实现类",{"0":{"2":1},"1":{"3":1,"4":1,"5":1}}],["集合框架中的接口",{"0":{"28":1}}],["集合框架中的泛型有什么优点",{"0":{"10":1}}],["集合框架的基本设计",{"2":{"23":1}}],["集合框架的部分优点如下",{"2":{"1":1}}],["集合框架",{"0":{"23":1},"1":{"24":1,"25":1,"26":1,"27":1,"28":1,"29":1}}],["集合框架概述",{"2":{"1":1}}],["集合框架是什么",{"0":{"1":1}}],["集合面试题",{"0":{"0":1},"1":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1}}]],"serializationVersion":2}';export{t as default};
